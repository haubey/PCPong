var tame = require('tamejs').runtime;
var __tame_fn_8 = function (__tame_k) {
    var info = [ ] ;
    var host = "warez.ru" ;
    var dns = require ( 'dns' ) ;
    require ( 'tamejs' ) .register ( ) ;
    var connectors = require ( 'tamejs/lib/connectors' ) ;
    var __tame_fn_0 = function (__tame_k) {
        var err, ip;
        var __tame_fn_1 = function (__tame_k) {
            var __tame_ev = new tame.Event (__tame_k);
            var __tame_fn_2 = function (__tame_k) {
                dns .lookup ( host , connectors .timeout (
                __tame_ev.defer (function (args) {
                    err = args[0];
                    ip = args[1];
                })
                , 100 , info ) ) ;
                tame.callChain([__tame_k]);
            };
            __tame_fn_2(tame.end);
            __tame_ev.fulfill();
        };
        var __tame_fn_3 = function (__tame_k) {
            var __tame_fn_4 = function (__tame_k) {
                console .log ( host + ": timed out!" ) ;
                tame.callChain([__tame_k]);
            };
            var __tame_fn_5 = function (__tame_k) {
                var __tame_fn_6 = function (__tame_k) {
                    console .log ( host + ": error: " + err ) ;
                    tame.callChain([__tame_k]);
                };
                var __tame_fn_7 = function (__tame_k) {
                    console .log ( host + " -> " + ip ) ;
                    tame.callChain([__tame_k]);
                };
                if (err) {
                    tame.callChain([__tame_fn_6, __tame_k]);
                } else {
                    tame.callChain([__tame_fn_7, __tame_k]);
                }
            };
            if (!info [ 0 ]) {
                tame.callChain([__tame_fn_4, __tame_k]);
            } else {
                tame.callChain([__tame_fn_5, __tame_k]);
            }
        };
        tame.callChain([__tame_fn_1, __tame_fn_3, __tame_k]);
    };
    tame.callChain([__tame_fn_0, __tame_k]);
};
__tame_fn_8 (tame.end);