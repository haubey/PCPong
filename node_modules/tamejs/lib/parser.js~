/* Jison generated parser */
var parser = (function(){
var parser = {trace: function trace() { },
yy: {},
symbols_: {"error":2,"String":3,"String1":4,"String2":5,"QUOTE1":6,"StringAtoms":7,"QUOTE2":8,"StringAtom":9,"STRING_ATOM":10,"InnerExprAtom":11,"OuterExprAtom":12,"LABEL":13,"BraceExpr":14,"FunctionDeclaration":15,"InnerExprAtomList":16,"InnerExpr":17,"ParenExpr":18,"LPAREN":19,"RPAREN":20,"BracketExpr":21,"LBRACKET":22,"RBRACKET":23,"LBRACE":24,"RBRACE":25,"GENERIC":26,"COMMA":27,"COLON":28,"ID":29,"THIS":30,"Mkevent":31,"SlotAtom":32,"SlotAtomList":33,"StomAtomList":34,"Slot":35,"MKEVENT":36,"SlotListOpt":37,"SlotList":38,"Expr":39,"ExprStatement":40,"SEMICOLON":41,"SemicolonOpt":42,"Statement":43,"Block":44,"ForStatement":45,"WhileStatement":46,"IfStatement":47,"TwaitStatement":48,"LabeledStatement":49,"ReturnStatement":50,"BreakStatement":51,"ContinueStatement":52,"SwitchStatement":53,"TryStatement":54,"Label":55,"TRY":56,"CatchStatementOpt":57,"FinallyStatementOpt":58,"CATCH":59,"FINALLY":60,"RETURN":61,"CONTINUE":62,"IdOpt":63,"BREAK":64,"SourceElements":65,"FOR":66,"ForIter":67,"WHILE":68,"SWITCH":69,"CaseBlock":70,"Case":71,"CaseLabel":72,"CaseBody":73,"DEFAULT":74,"CASE":75,"IF":76,"ELSE":77,"FUNCTION":78,"ParamListOpt":79,"TWAIT":80,"ParamList":81,"Param":82,"FunctionBody":83,"ShbangOpt":84,"SHBANG":85,"Program":86,"$accept":0,"$end":1},
terminals_: {2:"error",6:"QUOTE1",8:"QUOTE2",10:"STRING_ATOM",13:"LABEL",19:"LPAREN",20:"RPAREN",22:"LBRACKET",23:"RBRACKET",24:"LBRACE",25:"RBRACE",26:"GENERIC",27:"COMMA",28:"COLON",29:"ID",30:"THIS",34:"StomAtomList",36:"MKEVENT",41:"SEMICOLON",56:"TRY",59:"CATCH",60:"FINALLY",61:"RETURN",62:"CONTINUE",64:"BREAK",66:"FOR",68:"WHILE",69:"SWITCH",74:"DEFAULT",75:"CASE",76:"IF",77:"ELSE",78:"FUNCTION",80:"TWAIT",85:"SHBANG"},
productions_: [0,[3,1],[3,1],[4,3],[5,3],[9,1],[7,0],[7,2],[11,1],[11,1],[11,1],[11,1],[16,0],[16,2],[17,1],[18,3],[21,3],[14,3],[12,1],[12,1],[12,1],[12,1],[12,1],[12,1],[12,1],[12,1],[12,1],[32,1],[32,1],[32,1],[32,1],[32,1],[32,1],[32,1],[32,1],[32,1],[32,1],[32,1],[33,1],[33,2],[35,1],[31,4],[37,0],[37,1],[38,1],[38,3],[39,0],[39,2],[40,2],[40,1],[42,0],[42,1],[43,1],[43,1],[43,1],[43,1],[43,1],[43,1],[43,1],[43,1],[43,1],[43,1],[43,1],[43,1],[55,1],[49,2],[54,4],[57,0],[57,5],[58,0],[58,2],[50,3],[52,3],[51,3],[44,3],[65,0],[65,2],[45,5],[46,5],[53,7],[70,0],[70,2],[71,2],[72,2],[72,2],[72,3],[73,1],[47,5],[47,7],[67,5],[67,1],[15,6],[48,2],[63,0],[63,1],[81,1],[81,3],[82,1],[79,0],[79,1],[83,1],[84,0],[84,1],[86,2]],
performAction: function anonymous(yytext,yyleng,yylineno,yy,yystate,$$,_$) {

var $0 = $$.length - 1;
switch (yystate) {
case 1: this.$ = $$[$0]; 
break;
case 2: this.$ = $$[$0]; 
break;
case 3: this.$ = new yy.String (_$[$0-2].first_line, _$[$0].last_line, "'" + $$[$0-1] + "'"); 
break;
case 4: this.$ = new yy.String (_$[$0-2].first_line, _$[$0].last_line, '"' + $$[$0-1] + '"'); 
break;
case 5: this.$ = yytext; 
break;
case 6: this.$ = ""; 
break;
case 7: this.$ = $$[$0-1] + $$[$0]; 
break;
case 8: this.$ = $$[$0]; 
break;
case 9: this.$ = [ new yy.Atom (_$[$0].first_line, yytext + " :")]; 
break;
case 10: this.$ = $$[$0]; 
break;
case 11: this.$ = [ $$[$0] ]; 
break;
case 12: this.$ = []; 
break;
case 13: this.$ = $$[$0-1].concat ($$[$0]); 
break;
case 14: this.$ = new yy.Expr ($$[$0]); 
break;
case 15: 
         var out = [ new yy.Atom (_$[$0-2].first_line, '(') ];
	 $$[$0-1].pushAtomsToArray (out);
	 out.push (new yy.Atom (_$[$0].first_line, ')'));
	 this.$ = out;
     
break;
case 16: 
         var out = [ new yy.Atom (_$[$0-2].first_line, '[') ];
	 $$[$0-1].pushAtomsToArray (out);
	 out.push (new yy.Atom (_$[$0].first_line, ']'));
	 this.$ = out;
     
break;
case 17: 
         var out = [ new yy.Atom (_$[$0-2].first_line, '{') ];
	 $$[$0-1].pushAtomsToArray (out);
	 out.push (new yy.Atom (_$[$0].first_line, '}'));
	 this.$ = out;
     
break;
case 18: this.$ = [ new yy.Atom (_$[$0].first_line, yytext) ]; 
break;
case 19: this.$ = [ new yy.Atom (_$[$0].first_line, yytext) ]; 
break;
case 20: this.$ = [ new yy.Atom (_$[$0].first_line, yytext) ]; 
break;
case 21: this.$ = [ new yy.Atom (_$[$0].first_line, yytext) ]; 
break;
case 22: this.$ = $$[$0]; 
break;
case 23: this.$ = $$[$0]; 
break;
case 24: this.$ = $$[$0]; 
break;
case 25: this.$ = [ new yy.ThisExpr (_$[$0].first_line) ]; 
break;
case 26: this.$ = [ $$[$0] ]; 
break;
case 27: this.$ = [ new yy.Atom (_$[$0].first_line, yytext) ]; 
break;
case 28: this.$ = [ new yy.Atom (_$[$0].first_line, yytext) ]; 
break;
case 29: this.$ = [ new yy.Atom (_$[$0].first_line, yytext) ]; 
break;
case 30: this.$ = $$[$0]; 
break;
case 31: this.$ = $$[$0]; 
break;
case 32: this.$ = $$[$0]; 
break;
case 33: this.$ = [ new yy.ThisExpr (_$[$0].first_line) ]; 
break;
case 34: this.$ = [ $$[$0] ]; 
break;
case 35: this.$ = [ new yy.Atom (_$[$0].first_line, yytext + " :")]; 
break;
case 36: this.$ = $$[$0]; 
break;
case 37: this.$ = [ $$[$0] ]; 
break;
case 38: this.$ = $$[$0]; 
break;
case 39: $$[$0-1].push ($$[$0]); this.$ = $$[$0-1]; 
break;
case 40: this.$ = new yy.Expr ($$[$0]); 
break;
case 41:
           this.$ = new yy.MkeventExpr (_$[$0-3].first_line, $$[$0-1]);
     
break;
case 42: this.$ = []; 
break;
case 43: this.$ = $$[$0]; 
break;
case 44: this.$ = [ $$[$0] ]; 
break;
case 45:
         $$[$0-2].push ($$[$0]);
         this.$ = $$[$0-2];
     
break;
case 46: this.$ = new yy.Expr ([]); 
break;
case 47:
	 var lst = $$[$0-1].concat ($$[$0]);
	 this.$ = new yy.Expr (lst);
     
break;
case 48: 
         $$[$0-1].addAtom (new yy.Atom (_$[$0].first_line, ";")); 
	 this.$ = $$[$0-1]; 
     
break;
case 49:
         this.$ = yy.Expr ([ $$[$0] ] );
     
break;
case 64: this.$ = new yy.Label (_$[$0].first_line, yytext); 
break;
case 65:
         $$[$0].setLabel ($$[$0-1]);
	 this.$ = $$[$0];
     
break;
case 66:
	  this.$ = new yy.TryStatement (_$[$0-3].first_line, $$[$0-2], $$[$0-1], $$[$0]);
     
break;
case 67: this.$ = null; 
break;
case 68:
         this.$ = new yy.CatchStatement (_$[$0-4].first_line, $$[$0-2], $$[$0]);
     
break;
case 69: this.$ = null; 
break;
case 70:
         this.$ = $$[$0];
     
break;
case 71:
         this.$ = new yy.ReturnStatement (_$[$0-2].first_line, $$[$0-1]);
     
break;
case 72:
         this.$ = new yy.ContinueStatement (_$[$0-2].first_line, $$[$0-1]);
     
break;
case 73:
         this.$ = new yy.BreakStatement (_$[$0-2].first_line, $$[$0-1]);
     
break;
case 74: this.$ = new yy.Block (_$[$0-2].first_line, $$[$0-1]); 
break;
case 75: this.$ = []; 
break;
case 76: $$[$0-1].push ($$[$0]); this.$ = $$[$0-1]; 
break;
case 77:
        this.$ = new yy.ForStatement (_$[$0-4].first_line, $$[$0-2], $$[$0]);
     
break;
case 78:
        this.$ = new yy.WhileStatement (_$[$0-4].first_line, $$[$0-2], $$[$0]);
     
break;
case 79:
         this.$ = new yy.SwitchStatement (_$[$0-6].first_line, $$[$0-4], $$[$0-1]);
     
break;
case 80: this.$ = []; 
break;
case 81:
         $$[$0-1].push ($$[$0]);
	 this.$ = $$[$0-1];
     
break;
case 82:
         $$[$0-1].addBody (_$[$0-1].first_line, $$[$0]);
	 this.$ = $$[$0-1];
     
break;
case 83: this.$ = yy.Case (_$[$0-1].first_line); 
break;
case 84: this.$ = yy.Case (_$[$0-1].first_line, $$[$0]); 
break;
case 85: this.$ = yy.Case (_$[$0-2].first_line, $$[$0-1]); 
break;
case 86: this.$ = $$[$0]; 
break;
case 87:
        this.$ = new yy.IfElseStatement (_$[$0-4].first_line, $$[$0-2], $$[$0], null);
     
break;
case 88:
        this.$ = new yy.IfElseStatement (_$[$0-6].first_line, $$[$0-4], $$[$0-2], $$[$0]);
     
break;
case 89:
         this.$ = new yy.ForIterClassic ($$[$0-4], $$[$0-2], $$[$0]);
     
break;
case 90:
         this.$ = new yy.ForIterEach ($$[$0]); 
     
break;
case 91:
         this.$ = new yy.FunctionDeclaration (_$[$0-5].first_line, $$[$0-4], $$[$0-2], $$[$0]);
     
break;
case 92:
        this.$ = new yy.TwaitStatement (_$[$0-1].first_line, $$[$0]);
     
break;
case 94: this.$ = yytext; 
break;
case 95: this.$ = [ $$[$0] ]; 
break;
case 96: $$[$0-2].push ($$[$0]); this.$ = $$[$0-2]; 
break;
case 97: this.$ = yytext; 
break;
case 98: this.$ = []; 
break;
case 101: this.$ = null; 
break;
case 102: this.$ = $$[$0]; 
break;
case 103: yy.output = new yy.Program ($$[$0-1], $$[$0]); 
break;
}
},
table: [{1:[2,101],6:[2,101],8:[2,101],13:[2,101],19:[2,101],22:[2,101],24:[2,101],26:[2,101],27:[2,101],28:[2,101],29:[2,101],30:[2,101],36:[2,101],41:[2,101],56:[2,101],61:[2,101],62:[2,101],64:[2,101],66:[2,101],68:[2,101],69:[2,101],76:[2,101],78:[2,101],80:[2,101],84:2,85:[1,3],86:1},{1:[3]},{1:[2,75],6:[2,75],8:[2,75],13:[2,75],19:[2,75],22:[2,75],24:[2,75],26:[2,75],27:[2,75],28:[2,75],29:[2,75],30:[2,75],36:[2,75],41:[2,75],56:[2,75],61:[2,75],62:[2,75],64:[2,75],65:4,66:[2,75],68:[2,75],69:[2,75],76:[2,75],78:[2,75],80:[2,75]},{1:[2,102],6:[2,102],8:[2,102],13:[2,102],19:[2,102],22:[2,102],24:[2,102],26:[2,102],27:[2,102],28:[2,102],29:[2,102],30:[2,102],36:[2,102],41:[2,102],56:[2,102],61:[2,102],62:[2,102],64:[2,102],66:[2,102],68:[2,102],69:[2,102],76:[2,102],78:[2,102],80:[2,102]},{1:[2,103],3:38,4:43,5:44,6:[1,48],8:[1,49],12:31,13:[1,33],15:20,18:39,19:[1,45],21:40,22:[1,46],24:[1,18],26:[1,34],27:[1,35],28:[1,36],29:[1,37],30:[1,41],31:42,36:[1,47],39:19,40:7,41:[2,46],43:5,44:6,45:8,46:9,47:10,48:11,49:12,50:13,51:14,52:15,53:16,54:17,55:25,56:[1,30],61:[1,26],62:[1,28],64:[1,27],66:[1,21],68:[1,22],69:[1,29],76:[1,23],78:[1,32],80:[1,24]},{1:[2,76],6:[2,76],8:[2,76],13:[2,76],19:[2,76],22:[2,76],24:[2,76],25:[2,76],26:[2,76],27:[2,76],28:[2,76],29:[2,76],30:[2,76],36:[2,76],41:[2,76],56:[2,76],61:[2,76],62:[2,76],64:[2,76],66:[2,76],68:[2,76],69:[2,76],74:[2,76],75:[2,76],76:[2,76],78:[2,76],80:[2,76]},{1:[2,52],6:[2,52],8:[2,52],13:[2,52],19:[2,52],22:[2,52],24:[2,52],25:[2,52],26:[2,52],27:[2,52],28:[2,52],29:[2,52],30:[2,52],36:[2,52],41:[2,52],56:[2,52],61:[2,52],62:[2,52],64:[2,52],66:[2,52],68:[2,52],69:[2,52],74:[2,52],75:[2,52],76:[2,52],77:[2,52],78:[2,52],80:[2,52]},{1:[2,53],6:[2,53],8:[2,53],13:[2,53],19:[2,53],22:[2,53],24:[2,53],25:[2,53],26:[2,53],27:[2,53],28:[2,53],29:[2,53],30:[2,53],36:[2,53],41:[2,53],56:[2,53],61:[2,53],62:[2,53],64:[2,53],66:[2,53],68:[2,53],69:[2,53],74:[2,53],75:[2,53],76:[2,53],77:[2,53],78:[2,53],80:[2,53]},{1:[2,54],6:[2,54],8:[2,54],13:[2,54],19:[2,54],22:[2,54],24:[2,54],25:[2,54],26:[2,54],27:[2,54],28:[2,54],29:[2,54],30:[2,54],36:[2,54],41:[2,54],56:[2,54],61:[2,54],62:[2,54],64:[2,54],66:[2,54],68:[2,54],69:[2,54],74:[2,54],75:[2,54],76:[2,54],77:[2,54],78:[2,54],80:[2,54]},{1:[2,55],6:[2,55],8:[2,55],13:[2,55],19:[2,55],22:[2,55],24:[2,55],25:[2,55],26:[2,55],27:[2,55],28:[2,55],29:[2,55],30:[2,55],36:[2,55],41:[2,55],56:[2,55],61:[2,55],62:[2,55],64:[2,55],66:[2,55],68:[2,55],69:[2,55],74:[2,55],75:[2,55],76:[2,55],77:[2,55],78:[2,55],80:[2,55]},{1:[2,56],6:[2,56],8:[2,56],13:[2,56],19:[2,56],22:[2,56],24:[2,56],25:[2,56],26:[2,56],27:[2,56],28:[2,56],29:[2,56],30:[2,56],36:[2,56],41:[2,56],56:[2,56],61:[2,56],62:[2,56],64:[2,56],66:[2,56],68:[2,56],69:[2,56],74:[2,56],75:[2,56],76:[2,56],77:[2,56],78:[2,56],80:[2,56]},{1:[2,57],6:[2,57],8:[2,57],13:[2,57],19:[2,57],22:[2,57],24:[2,57],25:[2,57],26:[2,57],27:[2,57],28:[2,57],29:[2,57],30:[2,57],36:[2,57],41:[2,57],56:[2,57],61:[2,57],62:[2,57],64:[2,57],66:[2,57],68:[2,57],69:[2,57],74:[2,57],75:[2,57],76:[2,57],77:[2,57],78:[2,57],80:[2,57]},{1:[2,58],6:[2,58],8:[2,58],13:[2,58],19:[2,58],22:[2,58],24:[2,58],25:[2,58],26:[2,58],27:[2,58],28:[2,58],29:[2,58],30:[2,58],36:[2,58],41:[2,58],56:[2,58],61:[2,58],62:[2,58],64:[2,58],66:[2,58],68:[2,58],69:[2,58],74:[2,58],75:[2,58],76:[2,58],77:[2,58],78:[2,58],80:[2,58]},{1:[2,59],6:[2,59],8:[2,59],13:[2,59],19:[2,59],22:[2,59],24:[2,59],25:[2,59],26:[2,59],27:[2,59],28:[2,59],29:[2,59],30:[2,59],36:[2,59],41:[2,59],56:[2,59],61:[2,59],62:[2,59],64:[2,59],66:[2,59],68:[2,59],69:[2,59],74:[2,59],75:[2,59],76:[2,59],77:[2,59],78:[2,59],80:[2,59]},{1:[2,60],6:[2,60],8:[2,60],13:[2,60],19:[2,60],22:[2,60],24:[2,60],25:[2,60],26:[2,60],27:[2,60],28:[2,60],29:[2,60],30:[2,60],36:[2,60],41:[2,60],56:[2,60],61:[2,60],62:[2,60],64:[2,60],66:[2,60],68:[2,60],69:[2,60],74:[2,60],75:[2,60],76:[2,60],77:[2,60],78:[2,60],80:[2,60]},{1:[2,61],6:[2,61],8:[2,61],13:[2,61],19:[2,61],22:[2,61],24:[2,61],25:[2,61],26:[2,61],27:[2,61],28:[2,61],29:[2,61],30:[2,61],36:[2,61],41:[2,61],56:[2,61],61:[2,61],62:[2,61],64:[2,61],66:[2,61],68:[2,61],69:[2,61],74:[2,61],75:[2,61],76:[2,61],77:[2,61],78:[2,61],80:[2,61]},{1:[2,62],6:[2,62],8:[2,62],13:[2,62],19:[2,62],22:[2,62],24:[2,62],25:[2,62],26:[2,62],27:[2,62],28:[2,62],29:[2,62],30:[2,62],36:[2,62],41:[2,62],56:[2,62],61:[2,62],62:[2,62],64:[2,62],66:[2,62],68:[2,62],69:[2,62],74:[2,62],75:[2,62],76:[2,62],77:[2,62],78:[2,62],80:[2,62]},{1:[2,63],6:[2,63],8:[2,63],13:[2,63],19:[2,63],22:[2,63],24:[2,63],25:[2,63],26:[2,63],27:[2,63],28:[2,63],29:[2,63],30:[2,63],36:[2,63],41:[2,63],56:[2,63],61:[2,63],62:[2,63],64:[2,63],66:[2,63],68:[2,63],69:[2,63],74:[2,63],75:[2,63],76:[2,63],77:[2,63],78:[2,63],80:[2,63]},{6:[2,75],8:[2,75],13:[2,75],19:[2,75],22:[2,75],24:[2,75],25:[2,75],26:[2,75],27:[2,75],28:[2,75],29:[2,75],30:[2,75],36:[2,75],41:[2,75],56:[2,75],61:[2,75],62:[2,75],64:[2,75],65:50,66:[2,75],68:[2,75],69:[2,75],76:[2,75],78:[2,75],80:[2,75]},{41:[1,51]},{1:[2,49],6:[2,49],8:[2,49],13:[2,49],19:[2,49],22:[2,49],24:[2,49],25:[2,49],26:[2,49],27:[2,49],28:[2,49],29:[2,49],30:[2,49],36:[2,49],41:[2,49],56:[2,49],61:[2,49],62:[2,49],64:[2,49],66:[2,49],68:[2,49],69:[2,49],74:[2,49],75:[2,49],76:[2,49],77:[2,49],78:[2,49],80:[2,49]},{19:[1,52]},{19:[1,53]},{19:[1,54]},{3:38,4:43,5:44,6:[1,48],8:[1,49],12:31,13:[1,33],15:20,18:39,19:[1,45],21:40,22:[1,46],24:[1,18],26:[1,34],27:[1,35],28:[1,36],29:[1,37],30:[1,41],31:42,36:[1,47],39:19,40:7,41:[2,46],43:55,44:6,45:8,46:9,47:10,48:11,49:12,50:13,51:14,52:15,53:16,54:17,55:25,56:[1,30],61:[1,26],62:[1,28],64:[1,27],66:[1,21],68:[1,22],69:[1,29],76:[1,23],78:[1,32],80:[1,24]},{3:38,4:43,5:44,6:[1,48],8:[1,49],12:31,13:[1,33],15:20,18:39,19:[1,45],21:40,22:[1,46],24:[1,18],26:[1,34],27:[1,35],28:[1,36],29:[1,37],30:[1,41],31:42,36:[1,47],39:19,40:7,41:[2,46],43:56,44:6,45:8,46:9,47:10,48:11,49:12,50:13,51:14,52:15,53:16,54:17,55:25,56:[1,30],61:[1,26],62:[1,28],64:[1,27],66:[1,21],68:[1,22],69:[1,29],76:[1,23],78:[1,32],80:[1,24]},{6:[2,12],8:[2,12],13:[2,12],16:58,17:57,19:[2,12],22:[2,12],24:[2,12],26:[2,12],27:[2,12],28:[2,12],29:[2,12],30:[2,12],36:[2,12],41:[2,12],78:[2,12]},{29:[1,60],41:[2,93],63:59},{29:[1,60],41:[2,93],63:61},{19:[1,62]},{24:[1,18],44:63},{6:[2,12],8:[2,12],13:[2,12],16:64,19:[2,12],20:[2,12],22:[2,12],24:[2,12],26:[2,12],27:[2,12],28:[2,12],29:[2,12],30:[2,12],36:[2,12],41:[2,12],78:[2,12]},{19:[2,93],29:[1,60],63:65},{6:[2,64],8:[2,64],13:[2,64],19:[2,64],22:[2,64],24:[2,64],26:[2,64],27:[2,64],28:[2,64],29:[2,64],30:[2,64],36:[2,64],41:[2,64],56:[2,64],61:[2,64],62:[2,64],64:[2,64],66:[2,64],68:[2,64],69:[2,64],76:[2,64],78:[2,64],80:[2,64]},{6:[2,18],8:[2,18],13:[2,18],19:[2,18],20:[2,18],22:[2,18],23:[2,18],24:[2,18],25:[2,18],26:[2,18],27:[2,18],28:[2,18],29:[2,18],30:[2,18],36:[2,18],41:[2,18],78:[2,18]},{6:[2,19],8:[2,19],13:[2,19],19:[2,19],20:[2,19],22:[2,19],23:[2,19],24:[2,19],25:[2,19],26:[2,19],27:[2,19],28:[2,19],29:[2,19],30:[2,19],36:[2,19],41:[2,19],78:[2,19]},{6:[2,20],8:[2,20],13:[2,20],19:[2,20],20:[2,20],22:[2,20],23:[2,20],24:[2,20],25:[2,20],26:[2,20],27:[2,20],28:[2,20],29:[2,20],30:[2,20],36:[2,20],41:[2,20],78:[2,20]},{6:[2,21],8:[2,21],13:[2,21],19:[2,21],20:[2,21],22:[2,21],23:[2,21],24:[2,21],25:[2,21],26:[2,21],27:[2,21],28:[2,21],29:[2,21],30:[2,21],36:[2,21],41:[2,21],78:[2,21]},{6:[2,22],8:[2,22],13:[2,22],19:[2,22],20:[2,22],22:[2,22],23:[2,22],24:[2,22],25:[2,22],26:[2,22],27:[2,22],28:[2,22],29:[2,22],30:[2,22],36:[2,22],41:[2,22],78:[2,22]},{6:[2,23],8:[2,23],13:[2,23],19:[2,23],20:[2,23],22:[2,23],23:[2,23],24:[2,23],25:[2,23],26:[2,23],27:[2,23],28:[2,23],29:[2,23],30:[2,23],36:[2,23],41:[2,23],78:[2,23]},{6:[2,24],8:[2,24],13:[2,24],19:[2,24],20:[2,24],22:[2,24],23:[2,24],24:[2,24],25:[2,24],26:[2,24],27:[2,24],28:[2,24],29:[2,24],30:[2,24],36:[2,24],41:[2,24],78:[2,24]},{6:[2,25],8:[2,25],13:[2,25],19:[2,25],20:[2,25],22:[2,25],23:[2,25],24:[2,25],25:[2,25],26:[2,25],27:[2,25],28:[2,25],29:[2,25],30:[2,25],36:[2,25],41:[2,25],78:[2,25]},{6:[2,26],8:[2,26],13:[2,26],19:[2,26],20:[2,26],22:[2,26],23:[2,26],24:[2,26],25:[2,26],26:[2,26],27:[2,26],28:[2,26],29:[2,26],30:[2,26],36:[2,26],41:[2,26],78:[2,26]},{6:[2,1],8:[2,1],13:[2,1],19:[2,1],20:[2,1],22:[2,1],23:[2,1],24:[2,1],25:[2,1],26:[2,1],27:[2,1],28:[2,1],29:[2,1],30:[2,1],36:[2,1],41:[2,1],78:[2,1]},{6:[2,2],8:[2,2],13:[2,2],19:[2,2],20:[2,2],22:[2,2],23:[2,2],24:[2,2],25:[2,2],26:[2,2],27:[2,2],28:[2,2],29:[2,2],30:[2,2],36:[2,2],41:[2,2],78:[2,2]},{6:[2,12],8:[2,12],13:[2,12],16:58,17:66,19:[2,12],20:[2,12],22:[2,12],24:[2,12],26:[2,12],27:[2,12],28:[2,12],29:[2,12],30:[2,12],36:[2,12],78:[2,12]},{6:[2,12],8:[2,12],13:[2,12],16:58,17:67,19:[2,12],22:[2,12],23:[2,12],24:[2,12],26:[2,12],27:[2,12],28:[2,12],29:[2,12],30:[2,12],36:[2,12],78:[2,12]},{19:[1,68]},{6:[2,6],7:69,10:[2,6]},{7:70,8:[2,6],10:[2,6]},{3:38,4:43,5:44,6:[1,48],8:[1,49],12:31,13:[1,33],15:20,18:39,19:[1,45],21:40,22:[1,46],24:[1,18],25:[1,71],26:[1,34],27:[1,35],28:[1,36],29:[1,37],30:[1,41],31:42,36:[1,47],39:19,40:7,41:[2,46],43:5,44:6,45:8,46:9,47:10,48:11,49:12,50:13,51:14,52:15,53:16,54:17,55:25,56:[1,30],61:[1,26],62:[1,28],64:[1,27],66:[1,21],68:[1,22],69:[1,29],76:[1,23],78:[1,32],80:[1,24]},{1:[2,48],6:[2,48],8:[2,48],13:[2,48],19:[2,48],22:[2,48],24:[2,48],25:[2,48],26:[2,48],27:[2,48],28:[2,48],29:[2,48],30:[2,48],36:[2,48],41:[2,48],56:[2,48],61:[2,48],62:[2,48],64:[2,48],66:[2,48],68:[2,48],69:[2,48],74:[2,48],75:[2,48],76:[2,48],77:[2,48],78:[2,48],80:[2,48]},{3:38,4:43,5:44,6:[1,48],8:[1,49],12:31,18:39,19:[1,45],20:[2,46],21:40,22:[1,46],26:[1,34],27:[1,35],28:[1,36],29:[1,37],30:[1,41],31:42,36:[1,47],39:73,41:[2,46],67:72},{3:38,4:43,5:44,6:[1,48],8:[1,49],12:31,18:39,19:[1,45],20:[2,46],21:40,22:[1,46],26:[1,34],27:[1,35],28:[1,36],29:[1,37],30:[1,41],31:42,36:[1,47],39:74},{3:38,4:43,5:44,6:[1,48],8:[1,49],12:31,18:39,19:[1,45],20:[2,46],21:40,22:[1,46],26:[1,34],27:[1,35],28:[1,36],29:[1,37],30:[1,41],31:42,36:[1,47],39:75},{1:[2,92],6:[2,92],8:[2,92],13:[2,92],19:[2,92],22:[2,92],24:[2,92],25:[2,92],26:[2,92],27:[2,92],28:[2,92],29:[2,92],30:[2,92],36:[2,92],41:[2,92],56:[2,92],61:[2,92],62:[2,92],64:[2,92],66:[2,92],68:[2,92],69:[2,92],74:[2,92],75:[2,92],76:[2,92],77:[2,92],78:[2,92],80:[2,92]},{1:[2,65],6:[2,65],8:[2,65],13:[2,65],19:[2,65],22:[2,65],24:[2,65],25:[2,65],26:[2,65],27:[2,65],28:[2,65],29:[2,65],30:[2,65],36:[2,65],41:[2,65],56:[2,65],61:[2,65],62:[2,65],64:[2,65],66:[2,65],68:[2,65],69:[2,65],74:[2,65],75:[2,65],76:[2,65],77:[2,65],78:[2,65],80:[2,65]},{41:[1,76]},{3:38,4:43,5:44,6:[1,48],8:[1,49],11:77,12:78,13:[1,79],14:80,15:81,18:39,19:[1,45],20:[2,14],21:40,22:[1,46],23:[2,14],24:[1,82],25:[2,14],26:[1,34],27:[1,35],28:[1,36],29:[1,37],30:[1,41],31:42,36:[1,47],41:[2,14],78:[1,32]},{41:[1,83]},{19:[2,94],41:[2,94]},{41:[1,84]},{3:38,4:43,5:44,6:[1,48],8:[1,49],12:31,18:39,19:[1,45],20:[2,46],21:40,22:[1,46],26:[1,34],27:[1,35],28:[1,36],29:[1,37],30:[1,41],31:42,36:[1,47],39:85},{1:[2,67],6:[2,67],8:[2,67],13:[2,67],19:[2,67],22:[2,67],24:[2,67],25:[2,67],26:[2,67],27:[2,67],28:[2,67],29:[2,67],30:[2,67],36:[2,67],41:[2,67],56:[2,67],57:86,59:[1,87],60:[2,67],61:[2,67],62:[2,67],64:[2,67],66:[2,67],68:[2,67],69:[2,67],74:[2,67],75:[2,67],76:[2,67],77:[2,67],78:[2,67],80:[2,67]},{3:38,4:43,5:44,6:[1,48],8:[1,49],11:77,12:78,13:[1,79],14:80,15:81,18:39,19:[1,45],20:[2,47],21:40,22:[1,46],24:[1,82],26:[1,34],27:[1,35],28:[1,36],29:[1,37],30:[1,41],31:42,36:[1,47],41:[2,47],78:[1,32]},{19:[1,88]},{20:[1,89]},{23:[1,90]},{3:100,4:43,5:44,6:[1,48],8:[1,49],13:[1,105],14:106,15:107,18:101,19:[1,45],20:[2,42],21:102,22:[1,46],24:[1,82],26:[1,97],28:[1,98],29:[1,99],30:[1,103],31:104,32:95,33:94,34:[1,96],35:93,36:[1,47],37:91,38:92,78:[1,32]},{6:[1,108],10:[1,109]},{8:[1,110],10:[1,109]},{1:[2,74],6:[2,74],8:[2,74],13:[2,74],19:[2,74],20:[2,74],22:[2,74],23:[2,74],24:[2,74],25:[2,74],26:[2,74],27:[2,74],28:[2,74],29:[2,74],30:[2,74],36:[2,74],41:[2,74],56:[2,74],59:[2,74],60:[2,74],61:[2,74],62:[2,74],64:[2,74],66:[2,74],68:[2,74],69:[2,74],74:[2,74],75:[2,74],76:[2,74],77:[2,74],78:[2,74],80:[2,74]},{20:[1,111]},{20:[2,90],41:[1,112]},{20:[1,113]},{20:[1,114]},{1:[2,71],6:[2,71],8:[2,71],13:[2,71],19:[2,71],22:[2,71],24:[2,71],25:[2,71],26:[2,71],27:[2,71],28:[2,71],29:[2,71],30:[2,71],36:[2,71],41:[2,71],56:[2,71],61:[2,71],62:[2,71],64:[2,71],66:[2,71],68:[2,71],69:[2,71],74:[2,71],75:[2,71],76:[2,71],77:[2,71],78:[2,71],80:[2,71]},{6:[2,13],8:[2,13],13:[2,13],19:[2,13],20:[2,13],22:[2,13],23:[2,13],24:[2,13],25:[2,13],26:[2,13],27:[2,13],28:[2,13],29:[2,13],30:[2,13],36:[2,13],41:[2,13],78:[2,13]},{6:[2,8],8:[2,8],13:[2,8],19:[2,8],20:[2,8],22:[2,8],23:[2,8],24:[2,8],25:[2,8],26:[2,8],27:[2,8],28:[2,8],29:[2,8],30:[2,8],36:[2,8],41:[2,8],78:[2,8]},{6:[2,9],8:[2,9],13:[2,9],19:[2,9],20:[2,9],22:[2,9],23:[2,9],24:[2,9],25:[2,9],26:[2,9],27:[2,9],28:[2,9],29:[2,9],30:[2,9],36:[2,9],41:[2,9],78:[2,9]},{6:[2,10],8:[2,10],13:[2,10],19:[2,10],20:[2,10],22:[2,10],23:[2,10],24:[2,10],25:[2,10],26:[2,10],27:[2,10],28:[2,10],29:[2,10],30:[2,10],36:[2,10],41:[2,10],78:[2,10]},{6:[2,11],8:[2,11],13:[2,11],19:[2,11],20:[2,11],22:[2,11],23:[2,11],24:[2,11],25:[2,11],26:[2,11],27:[2,11],28:[2,11],29:[2,11],30:[2,11],36:[2,11],41:[2,11],78:[2,11]},{6:[2,12],8:[2,12],13:[2,12],16:58,17:115,19:[2,12],22:[2,12],24:[2,12],25:[2,12],26:[2,12],27:[2,12],28:[2,12],29:[2,12],30:[2,12],36:[2,12],78:[2,12]},{1:[2,73],6:[2,73],8:[2,73],13:[2,73],19:[2,73],22:[2,73],24:[2,73],25:[2,73],26:[2,73],27:[2,73],28:[2,73],29:[2,73],30:[2,73],36:[2,73],41:[2,73],56:[2,73],61:[2,73],62:[2,73],64:[2,73],66:[2,73],68:[2,73],69:[2,73],74:[2,73],75:[2,73],76:[2,73],77:[2,73],78:[2,73],80:[2,73]},{1:[2,72],6:[2,72],8:[2,72],13:[2,72],19:[2,72],22:[2,72],24:[2,72],25:[2,72],26:[2,72],27:[2,72],28:[2,72],29:[2,72],30:[2,72],36:[2,72],41:[2,72],56:[2,72],61:[2,72],62:[2,72],64:[2,72],66:[2,72],68:[2,72],69:[2,72],74:[2,72],75:[2,72],76:[2,72],77:[2,72],78:[2,72],80:[2,72]},{20:[1,116]},{1:[2,69],6:[2,69],8:[2,69],13:[2,69],19:[2,69],22:[2,69],24:[2,69],25:[2,69],26:[2,69],27:[2,69],28:[2,69],29:[2,69],30:[2,69],36:[2,69],41:[2,69],56:[2,69],58:117,60:[1,118],61:[2,69],62:[2,69],64:[2,69],66:[2,69],68:[2,69],69:[2,69],74:[2,69],75:[2,69],76:[2,69],77:[2,69],78:[2,69],80:[2,69]},{19:[1,119]},{20:[2,98],29:[1,123],79:120,81:121,82:122},{6:[2,15],8:[2,15],13:[2,15],19:[2,15],20:[2,15],22:[2,15],23:[2,15],24:[2,15],25:[2,15],26:[2,15],27:[2,15],28:[2,15],29:[2,15],30:[2,15],36:[2,15],41:[2,15],78:[2,15]},{6:[2,16],8:[2,16],13:[2,16],19:[2,16],20:[2,16],22:[2,16],23:[2,16],24:[2,16],25:[2,16],26:[2,16],27:[2,16],28:[2,16],29:[2,16],30:[2,16],36:[2,16],41:[2,16],78:[2,16]},{20:[1,124]},{20:[2,43],27:[1,125]},{20:[2,44],27:[2,44]},{20:[2,40],27:[2,40]},{20:[2,38],27:[2,38]},{3:100,4:43,5:44,6:[1,48],8:[1,49],13:[1,105],14:106,15:107,18:101,19:[1,45],21:102,22:[1,46],24:[1,82],26:[1,97],28:[1,98],29:[1,99],30:[1,103],31:104,32:126,36:[1,47],78:[1,32]},{20:[2,27],27:[2,27]},{20:[2,28],27:[2,28]},{20:[2,29],27:[2,29]},{20:[2,30],27:[2,30]},{20:[2,31],27:[2,31]},{20:[2,32],27:[2,32]},{20:[2,33],27:[2,33]},{20:[2,34],27:[2,34]},{20:[2,35],27:[2,35]},{20:[2,36],27:[2,36]},{20:[2,37],27:[2,37]},{6:[2,3],8:[2,3],13:[2,3],19:[2,3],20:[2,3],22:[2,3],23:[2,3],24:[2,3],25:[2,3],26:[2,3],27:[2,3],28:[2,3],29:[2,3],30:[2,3],36:[2,3],41:[2,3],78:[2,3]},{6:[2,7],8:[2,7],10:[2,7]},{6:[2,4],8:[2,4],13:[2,4],19:[2,4],20:[2,4],22:[2,4],23:[2,4],24:[2,4],25:[2,4],26:[2,4],27:[2,4],28:[2,4],29:[2,4],30:[2,4],36:[2,4],41:[2,4],78:[2,4]},{3:38,4:43,5:44,6:[1,48],8:[1,49],12:31,13:[1,33],15:20,18:39,19:[1,45],21:40,22:[1,46],24:[1,18],26:[1,34],27:[1,35],28:[1,36],29:[1,37],30:[1,41],31:42,36:[1,47],39:19,40:7,41:[2,46],43:127,44:6,45:8,46:9,47:10,48:11,49:12,50:13,51:14,52:15,53:16,54:17,55:25,56:[1,30],61:[1,26],62:[1,28],64:[1,27],66:[1,21],68:[1,22],69:[1,29],76:[1,23],78:[1,32],80:[1,24]},{3:38,4:43,5:44,6:[1,48],8:[1,49],12:31,18:39,19:[1,45],21:40,22:[1,46],26:[1,34],27:[1,35],28:[1,36],29:[1,37],30:[1,41],31:42,36:[1,47],39:128,41:[2,46]},{3:38,4:43,5:44,6:[1,48],8:[1,49],12:31,13:[1,33],15:20,18:39,19:[1,45],21:40,22:[1,46],24:[1,18],26:[1,34],27:[1,35],28:[1,36],29:[1,37],30:[1,41],31:42,36:[1,47],39:19,40:7,41:[2,46],43:129,44:6,45:8,46:9,47:10,48:11,49:12,50:13,51:14,52:15,53:16,54:17,55:25,56:[1,30],61:[1,26],62:[1,28],64:[1,27],66:[1,21],68:[1,22],69:[1,29],76:[1,23],78:[1,32],80:[1,24]},{3:38,4:43,5:44,6:[1,48],8:[1,49],12:31,13:[1,33],15:20,18:39,19:[1,45],21:40,22:[1,46],24:[1,18],26:[1,34],27:[1,35],28:[1,36],29:[1,37],30:[1,41],31:42,36:[1,47],39:19,40:7,41:[2,46],43:130,44:6,45:8,46:9,47:10,48:11,49:12,50:13,51:14,52:15,53:16,54:17,55:25,56:[1,30],61:[1,26],62:[1,28],64:[1,27],66:[1,21],68:[1,22],69:[1,29],76:[1,23],78:[1,32],80:[1,24]},{25:[1,131]},{24:[1,132]},{1:[2,66],6:[2,66],8:[2,66],13:[2,66],19:[2,66],22:[2,66],24:[2,66],25:[2,66],26:[2,66],27:[2,66],28:[2,66],29:[2,66],30:[2,66],36:[2,66],41:[2,66],56:[2,66],61:[2,66],62:[2,66],64:[2,66],66:[2,66],68:[2,66],69:[2,66],74:[2,66],75:[2,66],76:[2,66],77:[2,66],78:[2,66],80:[2,66]},{24:[1,18],44:133},{3:38,4:43,5:44,6:[1,48],8:[1,49],12:31,18:39,19:[1,45],20:[2,46],21:40,22:[1,46],26:[1,34],27:[1,35],28:[1,36],29:[1,37],30:[1,41],31:42,36:[1,47],39:134},{20:[1,135]},{20:[2,99],27:[1,136]},{20:[2,95],27:[2,95]},{20:[2,97],27:[2,97]},{6:[2,41],8:[2,41],13:[2,41],19:[2,41],20:[2,41],22:[2,41],23:[2,41],24:[2,41],25:[2,41],26:[2,41],27:[2,41],28:[2,41],29:[2,41],30:[2,41],36:[2,41],41:[2,41],78:[2,41]},{3:100,4:43,5:44,6:[1,48],8:[1,49],13:[1,105],14:106,15:107,18:101,19:[1,45],21:102,22:[1,46],24:[1,82],26:[1,97],28:[1,98],29:[1,99],30:[1,103],31:104,32:95,33:94,34:[1,96],35:137,36:[1,47],78:[1,32]},{20:[2,39],27:[2,39]},{1:[2,77],6:[2,77],8:[2,77],13:[2,77],19:[2,77],22:[2,77],24:[2,77],25:[2,77],26:[2,77],27:[2,77],28:[2,77],29:[2,77],30:[2,77],36:[2,77],41:[2,77],56:[2,77],61:[2,77],62:[2,77],64:[2,77],66:[2,77],68:[2,77],69:[2,77],74:[2,77],75:[2,77],76:[2,77],77:[2,77],78:[2,77],80:[2,77]},{41:[1,138]},{1:[2,78],6:[2,78],8:[2,78],13:[2,78],19:[2,78],22:[2,78],24:[2,78],25:[2,78],26:[2,78],27:[2,78],28:[2,78],29:[2,78],30:[2,78],36:[2,78],41:[2,78],56:[2,78],61:[2,78],62:[2,78],64:[2,78],66:[2,78],68:[2,78],69:[2,78],74:[2,78],75:[2,78],76:[2,78],77:[2,78],78:[2,78],80:[2,78]},{1:[2,87],6:[2,87],8:[2,87],13:[2,87],19:[2,87],22:[2,87],24:[2,87],25:[2,87],26:[2,87],27:[2,87],28:[2,87],29:[2,87],30:[2,87],36:[2,87],41:[2,87],56:[2,87],61:[2,87],62:[2,87],64:[2,87],66:[2,87],68:[2,87],69:[2,87],74:[2,87],75:[2,87],76:[2,87],77:[1,139],78:[2,87],80:[2,87]},{6:[2,17],8:[2,17],13:[2,17],19:[2,17],20:[2,17],22:[2,17],23:[2,17],24:[2,17],25:[2,17],26:[2,17],27:[2,17],28:[2,17],29:[2,17],30:[2,17],36:[2,17],41:[2,17],78:[2,17]},{25:[2,80],70:140,74:[2,80],75:[2,80]},{1:[2,70],6:[2,70],8:[2,70],13:[2,70],19:[2,70],22:[2,70],24:[2,70],25:[2,70],26:[2,70],27:[2,70],28:[2,70],29:[2,70],30:[2,70],36:[2,70],41:[2,70],56:[2,70],61:[2,70],62:[2,70],64:[2,70],66:[2,70],68:[2,70],69:[2,70],74:[2,70],75:[2,70],76:[2,70],77:[2,70],78:[2,70],80:[2,70]},{20:[1,141]},{24:[1,18],44:142},{29:[1,123],82:143},{20:[2,45],27:[2,45]},{3:38,4:43,5:44,6:[1,48],8:[1,49],12:31,18:39,19:[1,45],20:[2,46],21:40,22:[1,46],26:[1,34],27:[1,35],28:[1,36],29:[1,37],30:[1,41],31:42,36:[1,47],39:144},{3:38,4:43,5:44,6:[1,48],8:[1,49],12:31,13:[1,33],15:20,18:39,19:[1,45],21:40,22:[1,46],24:[1,18],26:[1,34],27:[1,35],28:[1,36],29:[1,37],30:[1,41],31:42,36:[1,47],39:19,40:7,41:[2,46],43:145,44:6,45:8,46:9,47:10,48:11,49:12,50:13,51:14,52:15,53:16,54:17,55:25,56:[1,30],61:[1,26],62:[1,28],64:[1,27],66:[1,21],68:[1,22],69:[1,29],76:[1,23],78:[1,32],80:[1,24]},{25:[1,146],71:147,72:148,74:[1,149],75:[1,150]},{24:[1,18],44:151},{1:[2,91],6:[2,91],8:[2,91],13:[2,91],19:[2,91],20:[2,91],22:[2,91],23:[2,91],24:[2,91],25:[2,91],26:[2,91],27:[2,91],28:[2,91],29:[2,91],30:[2,91],36:[2,91],41:[2,91],56:[2,91],61:[2,91],62:[2,91],64:[2,91],66:[2,91],68:[2,91],69:[2,91],74:[2,91],75:[2,91],76:[2,91],77:[2,91],78:[2,91],80:[2,91]},{20:[2,96],27:[2,96]},{20:[2,89]},{1:[2,88],6:[2,88],8:[2,88],13:[2,88],19:[2,88],22:[2,88],24:[2,88],25:[2,88],26:[2,88],27:[2,88],28:[2,88],29:[2,88],30:[2,88],36:[2,88],41:[2,88],56:[2,88],61:[2,88],62:[2,88],64:[2,88],66:[2,88],68:[2,88],69:[2,88],74:[2,88],75:[2,88],76:[2,88],77:[2,88],78:[2,88],80:[2,88]},{1:[2,79],6:[2,79],8:[2,79],13:[2,79],19:[2,79],22:[2,79],24:[2,79],25:[2,79],26:[2,79],27:[2,79],28:[2,79],29:[2,79],30:[2,79],36:[2,79],41:[2,79],56:[2,79],61:[2,79],62:[2,79],64:[2,79],66:[2,79],68:[2,79],69:[2,79],74:[2,79],75:[2,79],76:[2,79],77:[2,79],78:[2,79],80:[2,79]},{25:[2,81],74:[2,81],75:[2,81]},{6:[2,75],8:[2,75],13:[2,75],19:[2,75],22:[2,75],24:[2,75],25:[2,75],26:[2,75],27:[2,75],28:[2,75],29:[2,75],30:[2,75],36:[2,75],41:[2,75],56:[2,75],61:[2,75],62:[2,75],64:[2,75],65:153,66:[2,75],68:[2,75],69:[2,75],73:152,74:[2,75],75:[2,75],76:[2,75],78:[2,75],80:[2,75]},{28:[1,154]},{3:156,4:43,5:44,6:[1,48],8:[1,49],13:[1,155]},{1:[2,68],6:[2,68],8:[2,68],13:[2,68],19:[2,68],22:[2,68],24:[2,68],25:[2,68],26:[2,68],27:[2,68],28:[2,68],29:[2,68],30:[2,68],36:[2,68],41:[2,68],56:[2,68],60:[2,68],61:[2,68],62:[2,68],64:[2,68],66:[2,68],68:[2,68],69:[2,68],74:[2,68],75:[2,68],76:[2,68],77:[2,68],78:[2,68],80:[2,68]},{25:[2,82],74:[2,82],75:[2,82]},{3:38,4:43,5:44,6:[1,48],8:[1,49],12:31,13:[1,33],15:20,18:39,19:[1,45],21:40,22:[1,46],24:[1,18],25:[2,86],26:[1,34],27:[1,35],28:[1,36],29:[1,37],30:[1,41],31:42,36:[1,47],39:19,40:7,41:[2,46],43:5,44:6,45:8,46:9,47:10,48:11,49:12,50:13,51:14,52:15,53:16,54:17,55:25,56:[1,30],61:[1,26],62:[1,28],64:[1,27],66:[1,21],68:[1,22],69:[1,29],74:[2,86],75:[2,86],76:[1,23],78:[1,32],80:[1,24]},{6:[2,83],8:[2,83],13:[2,83],19:[2,83],22:[2,83],24:[2,83],25:[2,83],26:[2,83],27:[2,83],28:[2,83],29:[2,83],30:[2,83],36:[2,83],41:[2,83],56:[2,83],61:[2,83],62:[2,83],64:[2,83],66:[2,83],68:[2,83],69:[2,83],74:[2,83],75:[2,83],76:[2,83],78:[2,83],80:[2,83]},{6:[2,84],8:[2,84],13:[2,84],19:[2,84],22:[2,84],24:[2,84],25:[2,84],26:[2,84],27:[2,84],28:[2,84],29:[2,84],30:[2,84],36:[2,84],41:[2,84],56:[2,84],61:[2,84],62:[2,84],64:[2,84],66:[2,84],68:[2,84],69:[2,84],74:[2,84],75:[2,84],76:[2,84],78:[2,84],80:[2,84]},{28:[1,157]},{6:[2,85],8:[2,85],13:[2,85],19:[2,85],22:[2,85],24:[2,85],25:[2,85],26:[2,85],27:[2,85],28:[2,85],29:[2,85],30:[2,85],36:[2,85],41:[2,85],56:[2,85],61:[2,85],62:[2,85],64:[2,85],66:[2,85],68:[2,85],69:[2,85],74:[2,85],75:[2,85],76:[2,85],78:[2,85],80:[2,85]}],
defaultActions: {144:[2,89]},
parseError: function parseError(str, hash) {
    throw new Error(str);
},
parse: function parse(input) {
    var self = this,
        stack = [0],
        vstack = [null], // semantic value stack
        lstack = [], // location stack
        table = this.table,
        yytext = '',
        yylineno = 0,
        yyleng = 0,
        recovering = 0,
        TERROR = 2,
        EOF = 1;

    //this.reductionCount = this.shiftCount = 0;

    this.lexer.setInput(input);
    this.lexer.yy = this.yy;
    this.yy.lexer = this.lexer;
    if (typeof this.lexer.yylloc == 'undefined')
        this.lexer.yylloc = {};
    var yyloc = this.lexer.yylloc;
    lstack.push(yyloc);

    if (typeof this.yy.parseError === 'function')
        this.parseError = this.yy.parseError;

    function popStack (n) {
        stack.length = stack.length - 2*n;
        vstack.length = vstack.length - n;
        lstack.length = lstack.length - n;
    }

    function lex() {
        var token;
        token = self.lexer.lex() || 1; // $end = 1
        // if token isn't its numeric value, convert
        if (typeof token !== 'number') {
            token = self.symbols_[token] || token;
        }
        return token;
    };

    var symbol, preErrorSymbol, state, action, a, r, yyval={},p,len,newState, expected;
    while (true) {
        // retreive state number from top of stack
        state = stack[stack.length-1];

        // use default actions if available
        if (this.defaultActions[state]) {
            action = this.defaultActions[state];
        } else {
            if (symbol == null)
                symbol = lex();
            // read action for current state and first input
            action = table[state] && table[state][symbol];
        }

        // handle parse error
        if (typeof action === 'undefined' || !action.length || !action[0]) {

            if (!recovering) {
                // Report error
                expected = [];
                for (p in table[state]) if (this.terminals_[p] && p > 2) {
                    expected.push("'"+this.terminals_[p]+"'");
                }
                var errStr = '';
                if (this.lexer.showPosition) {
                    errStr = 'Parse error on line '+(yylineno+1)+":\n"+this.lexer.showPosition()+'\nExpecting '+expected.join(', ');
                } else {
                    errStr = 'Parse error on line '+(yylineno+1)+": Unexpected " +
                                  (symbol == 1 /*EOF*/ ? "end of input" :
                                              ("'"+(this.terminals_[symbol] || symbol)+"'"));
                }
                this.parseError(errStr,
                    {text: this.lexer.match, token: this.terminals_[symbol] || symbol, line: this.lexer.yylineno, loc: yyloc, expected: expected});
            }

            // just recovered from another error
            if (recovering == 3) {
                if (symbol == EOF) {
                    throw new Error(errStr || 'Parsing halted.');
                }

                // discard current lookahead and grab another
                yyleng = this.lexer.yyleng;
                yytext = this.lexer.yytext;
                yylineno = this.lexer.yylineno;
                yyloc = this.lexer.yylloc;
                symbol = lex();
            }

            // try to recover from error
            while (1) {
                // check for error recovery rule in this state
                if ((TERROR.toString()) in table[state]) {
                    break;
                }
                if (state == 0) {
                    throw new Error(errStr || 'Parsing halted.');
                }
                popStack(1);
                state = stack[stack.length-1];
            }

            preErrorSymbol = symbol; // save the lookahead token
            symbol = TERROR;         // insert generic error symbol as new lookahead
            state = stack[stack.length-1];
            action = table[state] && table[state][TERROR];
            recovering = 3; // allow 3 real symbols to be shifted before reporting a new error
        }

        // this shouldn't happen, unless resolve defaults are off
        if (action[0] instanceof Array && action.length > 1) {
            throw new Error('Parse Error: multiple actions possible at state: '+state+', token: '+symbol);
        }

        switch (action[0]) {

            case 1: // shift
                //this.shiftCount++;

                stack.push(symbol);
                vstack.push(this.lexer.yytext);
                lstack.push(this.lexer.yylloc);
                stack.push(action[1]); // push state
                symbol = null;
                if (!preErrorSymbol) { // normal execution/no error
                    yyleng = this.lexer.yyleng;
                    yytext = this.lexer.yytext;
                    yylineno = this.lexer.yylineno;
                    yyloc = this.lexer.yylloc;
                    if (recovering > 0)
                        recovering--;
                } else { // error just occurred, resume old lookahead f/ before error
                    symbol = preErrorSymbol;
                    preErrorSymbol = null;
                }
                break;

            case 2: // reduce
                //this.reductionCount++;

                len = this.productions_[action[1]][1];

                // perform semantic action
                yyval.$ = vstack[vstack.length-len]; // default to $$ = $1
                // default location, uses first token for firsts, last for lasts
                yyval._$ = {
                    first_line: lstack[lstack.length-(len||1)].first_line,
                    last_line: lstack[lstack.length-1].last_line,
                    first_column: lstack[lstack.length-(len||1)].first_column,
                    last_column: lstack[lstack.length-1].last_column
                };
                r = this.performAction.call(yyval, yytext, yyleng, yylineno, this.yy, action[1], vstack, lstack);

                if (typeof r !== 'undefined') {
                    return r;
                }

                // pop off stack
                if (len) {
                    stack = stack.slice(0,-1*len*2);
                    vstack = vstack.slice(0, -1*len);
                    lstack = lstack.slice(0, -1*len);
                }

                stack.push(this.productions_[action[1]][0]);    // push nonterminal (reduce)
                vstack.push(yyval.$);
                lstack.push(yyval._$);
                // goto new state = table[STATE][NONTERMINAL]
                newState = table[stack[stack.length-2]][stack[stack.length-1]];
                stack.push(newState);
                break;

            case 3: // accept
                return true;
        }

    }

    return true;
}};/* Jison generated lexer */
var lexer = (function(){var lexer = ({EOF:1,
parseError:function parseError(str, hash) {
        if (this.yy.parseError) {
            this.yy.parseError(str, hash);
        } else {
            throw new Error(str);
        }
    },
setInput:function (input) {
        this._input = input;
        this._more = this._less = this.done = false;
        this.yylineno = this.yyleng = 0;
        this.yytext = this.matched = this.match = '';
        this.conditionStack = ['INITIAL'];
        this.yylloc = {first_line:1,first_column:0,last_line:1,last_column:0};
        return this;
    },
input:function () {
        var ch = this._input[0];
        this.yytext+=ch;
        this.yyleng++;
        this.match+=ch;
        this.matched+=ch;
        var lines = ch.match(/\n/);
        if (lines) this.yylineno++;
        this._input = this._input.slice(1);
        return ch;
    },
unput:function (ch) {
        this._input = ch + this._input;
        return this;
    },
more:function () {
        this._more = true;
        return this;
    },
pastInput:function () {
        var past = this.matched.substr(0, this.matched.length - this.match.length);
        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\n/g, "");
    },
upcomingInput:function () {
        var next = this.match;
        if (next.length < 20) {
            next += this._input.substr(0, 20-next.length);
        }
        return (next.substr(0,20)+(next.length > 20 ? '...':'')).replace(/\n/g, "");
    },
showPosition:function () {
        var pre = this.pastInput();
        var c = new Array(pre.length + 1).join("-");
        return pre + this.upcomingInput() + "\n" + c+"^";
    },
next:function () {
        if (this.done) {
            return this.EOF;
        }
        if (!this._input) this.done = true;

        var token,
            match,
            col,
            lines;
        if (!this._more) {
            this.yytext = '';
            this.match = '';
        }
        var rules = this._currentRules();
        for (var i=0;i < rules.length; i++) {
            match = this._input.match(this.rules[rules[i]]);
            if (match) {
                lines = match[0].match(/\n.*/g);
                if (lines) this.yylineno += lines.length;
                this.yylloc = {first_line: this.yylloc.last_line,
                               last_line: this.yylineno+1,
                               first_column: this.yylloc.last_column,
                               last_column: lines ? lines[lines.length-1].length-1 : this.yylloc.last_column + match[0].length}
                this.yytext += match[0];
                this.match += match[0];
                this.matches = match;
                this.yyleng = this.yytext.length;
                this._more = false;
                this._input = this._input.slice(match[0].length);
                this.matched += match[0];
                token = this.performAction.call(this, this.yy, this, rules[i],this.conditionStack[this.conditionStack.length-1]);
                if (token) return token;
                else return;
            }
        }
        if (this._input === "") {
            return this.EOF;
        } else {
            this.parseError('Lexical error on line '+(this.yylineno+1)+'. Unrecognized text.\n'+this.showPosition(), 
                    {text: "", token: null, line: this.yylineno});
        }
    },
lex:function lex() {
        var r = this.next();
        if (typeof r !== 'undefined') {
            return r;
        } else {
            return this.lex();
        }
    },
begin:function begin(condition) {
        this.conditionStack.push(condition);
    },
popState:function popState() {
        return this.conditionStack.pop();
    },
_currentRules:function _currentRules() {
        return this.conditions[this.conditionStack[this.conditionStack.length-1]].rules;
    }});
lexer.performAction = function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {

var YYSTATE=YY_START
switch($avoiding_name_collisions) {
case 0:/* skip over C++-style comments */
break;
case 1:/* skip space */
break;
case 2:return 66;
break;
case 3:return 68; 
break;
case 4:return 64;
break;
case 5:return 62;
break;
case 6:return 61;
break;
case 7:return 'DO';
break;
case 8:return 76;
break;
case 9:return 77;
break;
case 10:return 56;
break;
case 11:return 59;
break;
case 12:return 80;
break;
case 13:return 78;
break;
case 14:return 36;
break;
case 15:return 60;
break;
case 16:return 75;
break;
case 17:return 69;
break;
case 18:return 74;
break;
case 19:return 30;
break;
case 20:return 85; 
break;
case 21: 
                                   yy_.yytext = yy_.yytext.replace (/[\s:]/g, ""); 
				   return 13; 
                              
break;
case 22: return 29; 
break;
case 23:return 24;
break;
case 24:return 25;
break;
case 25:return 19;
break;
case 26:return 20;
break;
case 27:return 22;
break;
case 28:return 23;
break;
case 29:return "SEMICOLON";
break;
case 30:return 27;
break;
case 31:return 28;
break;
case 32: this.begin ('ST_QUOTE2'); return 8; 
break;
case 33: this.begin ('ST_QUOTE1'); return 6; 
break;
case 34: this.begin ('ST_COMMENT'); 
break;
case 35:return 26;
break;
case 36:return 26;
break;
case 37:return 10;
break;
case 38:return 10;
break;
case 39: this.popState (); return "QUOTE2"; 
break;
case 40:return 'ENDOFFILE';
break;
case 41:return 10;
break;
case 42:return 10;
break;
case 43: this.popState (); return "QUOTE1"; 
break;
case 44:return 'ENDOFFILE';
break;
case 45: this.popState(); 
break;
case 46:/* ignore */
break;
case 47:/* ignore */
break;
case 48:return 'ENDOFFILE';
break;
}
};
lexer.rules = [/^\/\/.*/,/^\s+/,/^for\b/,/^while\b/,/^break\b/,/^continue\b/,/^return\b/,/^do\b/,/^if\b/,/^else\b/,/^try\b/,/^catch\b/,/^twait\b/,/^function\b/,/^mkevent\b/,/^finally\b/,/^case\b/,/^switch\b/,/^default\b/,/^this\b/,/^#![ ]*[/].*/,/^[a-zA-Z_0-9]+[ ^]*[:]/,/^[a-zA-Z_][a-zA-Z_0-9]*/,/^\{/,/^\}/,/^\(/,/^\)/,/^\[/,/^\]/,/^;/,/^,/,/^:/,/^"/,/^'/,/^\/\*/,/^[^/{}()\[\];,:"'\s]+/,/^./,/^\\./,/^[^\\"]+/,/^"/,/^$/,/^\\./,/^[^\\']+/,/^'/,/^$/,/^\*\//,/^\*/,/^[^*]+/,/^$/];
lexer.conditions = {"ST_QUOTE2":{"rules":[37,38,39,40],"inclusive":true},"ST_QUOTE1":{"rules":[41,42,43,44],"inclusive":true},"ST_COMMENT":{"rules":[45,46,47,48],"inclusive":true},"INITIAL":{"rules":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36],"inclusive":true}};return lexer;})()
parser.lexer = lexer;
return parser;
})();
if (typeof require !== 'undefined' && typeof exports !== 'undefined') {
exports.parser = parser;
exports.parse = function () { return parser.parse.apply(parser, arguments); }
exports.main = function commonjsMain(args) {
    if (!args[1])
        throw new Error('Usage: '+args[0]+' FILE');
    if (typeof process !== 'undefined') {
        var source = require('fs').readFileSync(require('path').join(process.cwd(), args[1]), "utf8");
    } else {
        var cwd = require("file").path(require("file").cwd());
        var source = cwd.join(args[1]).read({charset: "utf-8"});
    }
    return exports.parser.parse(source);
}
if (typeof module !== 'undefined' && require.main === module) {
  exports.main(typeof process !== 'undefined' ? process.argv.slice(1) : require("system").args);
}
}