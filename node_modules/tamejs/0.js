var tame = require('tamejs').runtime;
var __tame_fn_0 = function (__tame_k) {
    "use strict" ;
    function async (callback) {
        callback ( ) ;
    }
    (
    function  () {
        var __tame_this = this;
        var __tame_fn_1 = function (__tame_k) {
            var __tame_fn_2 = function (__tame_k) {
                var __tame_defers = new tame.Defers (__tame_k);
                var __tame_fn_3 = function (__tame_k) {
                    async (
                    __tame_defers.defer ()
                    ) ;
                    tame.callChain([__tame_k]);
                };
                __tame_fn_3(tame.end);
                __tame_defers._fulfill();
            };
            var __tame_fn_4 = function (__tame_k) {
                var __tame_fn_5 = function (__tame_k) {
                        console . log ( "this should happen" );
                        tame.callChain([tame.end, __tame_k]);
                };
                var __tame_fn_6 = function (__tame_k) {
                        console . log ( "but this shouldn't" );
                        tame.callChain([tame.end, __tame_k]);
                };
                if (true) {
                    tame.callChain([__tame_fn_5, __tame_k]);
                } else {
                    tame.callChain([__tame_fn_6, __tame_k]);
                }
            };
            tame.callChain([__tame_fn_2, __tame_fn_4, __tame_k]);
        };
        tame.callChain([__tame_fn_1, __tame_k]);
    }
    ) ( ) ;
    tame.callChain([__tame_k]);
};
__tame_fn_0 (tame.end);