var tame = require('tamejs').runtime;
var __tame_defer_cb = null;
var __tame_fn_0 = function (__tame_k) {
    tame.setActiveCb (__tame_defer_cb);
    "use strict" ;
    
    var assert = require ( "assert" ) ;
    var oks = 0 ;
    function bar () {
        return "yoyo";
    }
    function foo (val, autocb) {
        var __tame_defer_cb = tame.findDeferCb ([val, autocb]);
        tame.setActiveCb (__tame_defer_cb);
        var __tame_this = this;
        var __tame_fn_1 = function (__tame_k) {
            tame.setActiveCb (__tame_defer_cb);
            var __tame_fn_2 = function (__tame_k) {
                tame.setActiveCb (__tame_defer_cb);
                var __tame_defers = new tame.Deferrals (__tame_k);
                var __tame_fn_3 = function (__tame_k) {
                    tame.setActiveCb (__tame_defer_cb);
                    setTimeout (
                    __tame_defers.defer ( { 
                        func_name : "foo",
                        parent_cb : __tame_defer_cb,
                        line : 12,
                        file : "test/cases/33.tjs"
                    } )
                    , 1 ) ;
                    tame.callChain([__tame_k]);
                    tame.setActiveCb (null);
                };
                __tame_fn_3(tame.end);
                __tame_defers._fulfill();
                tame.setActiveCb (null);
            };
            var __tame_fn_4 = function (__tame_k) {
                tame.setActiveCb (__tame_defer_cb);
                var __tame_fn_5 = function (__tame_k) {
                    tame.setActiveCb (__tame_defer_cb);
                        autocb([ 1 , 2 , 3 ]);
                    tame.setActiveCb (null);
                };
                if (val == 0) {
                    tame.callChain([__tame_fn_5, __tame_k]);
                } else {
                    tame.callChain([__tame_k]);
                }
                tame.setActiveCb (null);
            };
            var __tame_fn_6 = function (__tame_k) {
                tame.setActiveCb (__tame_defer_cb);
                var __tame_fn_7 = function (__tame_k) {
                    tame.setActiveCb (__tame_defer_cb);
                        autocb({ "a" : 10 });
                    tame.setActiveCb (null);
                };
                if (val == 1) {
                    tame.callChain([__tame_fn_7, __tame_k]);
                } else {
                    tame.callChain([__tame_k]);
                }
                tame.setActiveCb (null);
            };
            var __tame_fn_8 = function (__tame_k) {
                tame.setActiveCb (__tame_defer_cb);
                var __tame_fn_9 = function (__tame_k) {
                    tame.setActiveCb (__tame_defer_cb);
                        autocb( bar ( ) );
                    tame.setActiveCb (null);
                };
                if (val == 2) {
                    tame.callChain([__tame_fn_9, __tame_k]);
                } else {
                    tame.callChain([__tame_k]);
                }
                tame.setActiveCb (null);
            };
            var __tame_fn_10 = function (__tame_k) {
                tame.setActiveCb (__tame_defer_cb);
                    autocb( 33 );
                tame.setActiveCb (null);
            };
            tame.callChain([__tame_fn_2, __tame_fn_4, __tame_fn_6, __tame_fn_8, __tame_fn_10, __tame_k]);
            tame.setActiveCb (null);
        };
        tame.callChain([__tame_fn_1, autocb, __tame_k]);
        tame.setActiveCb (null);
    }
    exports [ "simple autocb operations" ] = {
    
    run :
    function  (autocb) {
        var __tame_defer_cb = tame.findDeferCb ([autocb]);
        tame.setActiveCb (__tame_defer_cb);
        var __tame_this = this;
        var __tame_fn_11 = function (__tame_k) {
            tame.setActiveCb (__tame_defer_cb);
            var x;
            var __tame_fn_12 = function (__tame_k) {
                tame.setActiveCb (__tame_defer_cb);
                var __tame_defers = new tame.Deferrals (__tame_k);
                var __tame_fn_13 = function (__tame_k) {
                    tame.setActiveCb (__tame_defer_cb);
                    foo ( 0 ,
                    __tame_defers.defer ( { 
                        assign_fn : 
                            function () {
                                x = arguments[0];
                            }
                            ,
                        parent_cb : __tame_defer_cb,
                        line : 23,
                        file : "test/cases/33.tjs"
                    } )
                    ) ;
                    tame.callChain([__tame_k]);
                    tame.setActiveCb (null);
                };
                __tame_fn_13(tame.end);
                __tame_defers._fulfill();
                tame.setActiveCb (null);
            };
            var __tame_fn_14 = function (__tame_k) {
                tame.setActiveCb (__tame_defer_cb);
                var __tame_fn_15 = function (__tame_k) {
                    tame.setActiveCb (__tame_defer_cb);
                    oks += 1 ;
                    tame.callChain([__tame_k]);
                    tame.setActiveCb (null);
                };
                if (x [ 2 ] == 3) {
                    tame.callChain([__tame_fn_15, __tame_k]);
                } else {
                    tame.callChain([__tame_k]);
                }
                tame.setActiveCb (null);
            };
            var __tame_fn_16 = function (__tame_k) {
                tame.setActiveCb (__tame_defer_cb);
                var __tame_defers = new tame.Deferrals (__tame_k);
                var __tame_fn_17 = function (__tame_k) {
                    tame.setActiveCb (__tame_defer_cb);
                    foo ( 1 ,
                    __tame_defers.defer ( { 
                        assign_fn : 
                            function () {
                                x = arguments[0];
                            }
                            ,
                        parent_cb : __tame_defer_cb,
                        line : 25,
                        file : "test/cases/33.tjs"
                    } )
                    ) ;
                    tame.callChain([__tame_k]);
                    tame.setActiveCb (null);
                };
                __tame_fn_17(tame.end);
                __tame_defers._fulfill();
                tame.setActiveCb (null);
            };
            var __tame_fn_18 = function (__tame_k) {
                tame.setActiveCb (__tame_defer_cb);
                var __tame_fn_19 = function (__tame_k) {
                    tame.setActiveCb (__tame_defer_cb);
                    oks += 1 ;
                    tame.callChain([__tame_k]);
                    tame.setActiveCb (null);
                };
                if (x [ "a" ] == 10) {
                    tame.callChain([__tame_fn_19, __tame_k]);
                } else {
                    tame.callChain([__tame_k]);
                }
                tame.setActiveCb (null);
            };
            var __tame_fn_20 = function (__tame_k) {
                tame.setActiveCb (__tame_defer_cb);
                var __tame_defers = new tame.Deferrals (__tame_k);
                var __tame_fn_21 = function (__tame_k) {
                    tame.setActiveCb (__tame_defer_cb);
                    foo ( 2 ,
                    __tame_defers.defer ( { 
                        assign_fn : 
                            function () {
                                x = arguments[0];
                            }
                            ,
                        parent_cb : __tame_defer_cb,
                        line : 27,
                        file : "test/cases/33.tjs"
                    } )
                    ) ;
                    tame.callChain([__tame_k]);
                    tame.setActiveCb (null);
                };
                __tame_fn_21(tame.end);
                __tame_defers._fulfill();
                tame.setActiveCb (null);
            };
            var __tame_fn_22 = function (__tame_k) {
                tame.setActiveCb (__tame_defer_cb);
                var __tame_fn_23 = function (__tame_k) {
                    tame.setActiveCb (__tame_defer_cb);
                    oks += 1 ;
                    tame.callChain([__tame_k]);
                    tame.setActiveCb (null);
                };
                if (x == "yoyo") {
                    tame.callChain([__tame_fn_23, __tame_k]);
                } else {
                    tame.callChain([__tame_k]);
                }
                tame.setActiveCb (null);
            };
            var __tame_fn_24 = function (__tame_k) {
                tame.setActiveCb (__tame_defer_cb);
                var __tame_defers = new tame.Deferrals (__tame_k);
                var __tame_fn_25 = function (__tame_k) {
                    tame.setActiveCb (__tame_defer_cb);
                    foo ( 100 ,
                    __tame_defers.defer ( { 
                        assign_fn : 
                            function () {
                                x = arguments[0];
                            }
                            ,
                        parent_cb : __tame_defer_cb,
                        line : 29,
                        file : "test/cases/33.tjs"
                    } )
                    ) ;
                    tame.callChain([__tame_k]);
                    tame.setActiveCb (null);
                };
                __tame_fn_25(tame.end);
                __tame_defers._fulfill();
                tame.setActiveCb (null);
            };
            var __tame_fn_26 = function (__tame_k) {
                tame.setActiveCb (__tame_defer_cb);
                var __tame_fn_27 = function (__tame_k) {
                    tame.setActiveCb (__tame_defer_cb);
                    oks += 1 ;
                    tame.callChain([__tame_k]);
                    tame.setActiveCb (null);
                };
                if (x == 33) {
                    tame.callChain([__tame_fn_27, __tame_k]);
                } else {
                    tame.callChain([__tame_k]);
                }
                tame.setActiveCb (null);
            };
            tame.callChain([__tame_fn_12, __tame_fn_14, __tame_fn_16, __tame_fn_18, __tame_fn_20, __tame_fn_22, __tame_fn_24, __tame_fn_26, __tame_k]);
            tame.setActiveCb (null);
        };
        tame.callChain([__tame_fn_11, autocb, __tame_k]);
        tame.setActiveCb (null);
    }
    ,
    
    check :
    function  () {
        assert . ok ( oks == 4 , "all 4 returns happened correctly" ) ;
    }
    } ;
    tame.callChain([__tame_k]);
    tame.setActiveCb (null);
};
__tame_fn_0 (tame.end);