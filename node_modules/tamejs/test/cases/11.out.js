var tame = require('tamejs').runtime;
var __tame_defer_cb = null;
var __tame_fn_0 = function (__tame_k) {
    tame.setActiveCb (__tame_defer_cb);
    "use strict" ;
    
    var assert = require ( "assert" ) ;
    
    var res = 0 ;
    var i = 0 ;
    
    exports [ "another test of continue and break" ] = {
    
    run :
    function  (cb) {
        var __tame_defer_cb = tame.findDeferCb ([cb]);
        tame.setActiveCb (__tame_defer_cb);
        var __tame_this = this;
        var __tame_fn_1 = function (__tame_k) {
            tame.setActiveCb (__tame_defer_cb);
            var __tame_fn_2 = function (__tame_k) {
                tame.setActiveCb (__tame_defer_cb);
                var __tame_k_implicit = {};
                var __tame_k_local_foo = __tame_k_implicit;
                var __tame_fn_3 = function (__tame_k) {
                    tame.setActiveCb (__tame_defer_cb);
                    if (i < 100) {
                        var __tame_fn_4 = function (__tame_k) {
                            tame.setActiveCb (__tame_defer_cb);
                            var __tame_fn_5 = function (__tame_k) {
                                tame.setActiveCb (__tame_defer_cb);
                                var __tame_defers = new tame.Deferrals (__tame_k);
                                var __tame_fn_6 = function (__tame_k) {
                                    tame.setActiveCb (__tame_defer_cb);
                                    setTimeout (
                                    __tame_defers.defer ( { 
                                        parent_cb : __tame_defer_cb,
                                        line : 16,
                                        file : "test/cases/11.tjs"
                                    } )
                                    , 10*Math . random ( ) ) ;
                                    tame.callChain([__tame_k]);
                                    tame.setActiveCb (null);
                                };
                                __tame_fn_6(tame.end);
                                __tame_defers._fulfill();
                                tame.setActiveCb (null);
                            };
                            var __tame_fn_7 = function (__tame_k) {
                                tame.setActiveCb (__tame_defer_cb);
                                var __tame_fn_9 = function (__tame_k) {
                                    tame.setActiveCb (__tame_defer_cb);
                                    i += 2 ;
                                    res |= ( 1 << 20 ) ;
                                    var __tame_fn_8 = function (__tame_k) {
                                        tame.setActiveCb (__tame_defer_cb);
                                        __tame_k_local_foo.k_continue();
                                        tame.setActiveCb (null);
                                    };
                                    tame.callChain([__tame_fn_8, __tame_k]);
                                    tame.setActiveCb (null);
                                };
                                if (i == 10) {
                                    tame.callChain([__tame_fn_9, __tame_k]);
                                } else {
                                    tame.callChain([__tame_k]);
                                }
                                tame.setActiveCb (null);
                            };
                            var __tame_fn_17 = function (__tame_k) {
                                tame.setActiveCb (__tame_defer_cb);
                                res |= ( 1 << i ) ;
                                var __tame_fn_10 = function (__tame_k) {
                                    tame.setActiveCb (__tame_defer_cb);
                                    var __tame_fn_11 = function (__tame_k) {
                                        tame.setActiveCb (__tame_defer_cb);
                                        var __tame_fn_12 = function (__tame_k) {
                                            tame.setActiveCb (__tame_defer_cb);
                                            i ++ ;
                                            res |= ( 1 << 21 ) ;
                                            tame.callChain([__tame_k]);
                                            tame.setActiveCb (null);
                                        };
                                        if (i == 3) {
                                            tame.callChain([__tame_fn_12, __tame_k]);
                                        } else {
                                            tame.callChain([__tame_k]);
                                        }
                                        tame.setActiveCb (null);
                                    };
                                    var __tame_fn_13 = function (__tame_k) {
                                        tame.setActiveCb (__tame_defer_cb);
                                        var __tame_fn_15 = function (__tame_k) {
                                            tame.setActiveCb (__tame_defer_cb);
                                            res |= ( 1 << 22 ) ;
                                            var __tame_fn_14 = function (__tame_k) {
                                                tame.setActiveCb (__tame_defer_cb);
                                                __tame_k_local_foo.k_break();
                                                tame.setActiveCb (null);
                                            };
                                            tame.callChain([__tame_fn_14, __tame_k]);
                                            tame.setActiveCb (null);
                                        };
                                        if (i == 13) {
                                            tame.callChain([__tame_fn_15, __tame_k]);
                                        } else {
                                            tame.callChain([__tame_k]);
                                        }
                                        tame.setActiveCb (null);
                                    };
                                    var __tame_fn_16 = function (__tame_k) {
                                        tame.setActiveCb (__tame_defer_cb);
                                        i ++ ;
                                        tame.callChain([__tame_k]);
                                        tame.setActiveCb (null);
                                    };
                                    tame.callChain([__tame_fn_11, __tame_fn_13, __tame_fn_16, __tame_k]);
                                    tame.setActiveCb (null);
                                };
                                tame.callChain([__tame_fn_10, __tame_k]);
                                tame.setActiveCb (null);
                            };
                            tame.callChain([__tame_fn_5, __tame_fn_7, __tame_fn_17, __tame_k]);
                            tame.setActiveCb (null);
                        };
                        tame.callChain([__tame_fn_4, __tame_fn_3, __tame_k]);
                    } else {
                        tame.callChain([__tame_k]);
                    }
                    tame.setActiveCb (null);
                };
                __tame_k_implicit.k_break = __tame_k;
                __tame_k_implicit.k_continue = function() { __tame_fn_3(__tame_k); };
                tame.callChain([__tame_fn_3, __tame_k]);
                tame.setActiveCb (null);
            };
            var __tame_fn_18 = function (__tame_k) {
                tame.setActiveCb (__tame_defer_cb);
                res |= ( 1 << 23 ) ;
                cb ( ) ;
                tame.callChain([__tame_k]);
                tame.setActiveCb (null);
            };
            tame.callChain([__tame_fn_2, __tame_fn_18, __tame_k]);
            tame.setActiveCb (null);
        };
        tame.callChain([__tame_fn_1, __tame_k]);
        tame.setActiveCb (null);
    }
    ,
    
    check :
    function  () {
        assert . ok ( ( res == 15741935 && i == 13 ) , "all bits set!" ) ;
    }
    } ;
    tame.callChain([__tame_k]);
    tame.setActiveCb (null);
};
__tame_fn_0 (tame.end);