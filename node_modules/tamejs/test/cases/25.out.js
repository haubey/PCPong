var tame = require('tamejs').runtime;
var __tame_defer_cb = null;
var __tame_fn_0 = function (__tame_k) {
    tame.setActiveCb (__tame_defer_cb);
    "use strict" ;
    
    var assert = require ( "assert" ) ;
    function MyClass (lim) {
        this . _i = 0 ;
        this . _lim = lim ;
        this . iter =
        function  () {
            return this . _i;
        }
        this . next =
        function  (cb) {
            var __tame_defer_cb = tame.findDeferCb ([cb]);
            tame.setActiveCb (__tame_defer_cb);
            var __tame_this = this;
            var __tame_fn_10 = function (__tame_k) {
                tame.setActiveCb (__tame_defer_cb);
                var done = false ;
                var __tame_fn_1 = function (__tame_k) {
                    tame.setActiveCb (__tame_defer_cb);
                    var __tame_fn_2 = function (__tame_k) {
                        tame.setActiveCb (__tame_defer_cb);
                        var __tame_defers = new tame.Deferrals (__tame_k);
                        var __tame_fn_3 = function (__tame_k) {
                            tame.setActiveCb (__tame_defer_cb);
                            setTimeout (
                            __tame_defers.defer ( { 
                                parent_cb : __tame_defer_cb,
                                line : 15,
                                file : "test/cases/25.tjs"
                            } )
                            , 2 * Math . random ( ) ) ;
                            tame.callChain([__tame_k]);
                            tame.setActiveCb (null);
                        };
                        __tame_fn_3(tame.end);
                        __tame_defers._fulfill();
                        tame.setActiveCb (null);
                    };
                    var __tame_fn_4 = function (__tame_k) {
                        tame.setActiveCb (__tame_defer_cb);
                        do {
                            if (__tame_this . _i >= __tame_this . _lim) {
                                done = true ;
                            } else {
                                __tame_this . _i ++ ;
                            }
                        } while (0)
                        tame.callChain([__tame_k]);
                        tame.setActiveCb (null);
                    };
                    var __tame_fn_9 = function (__tame_k) {
                        tame.setActiveCb (__tame_defer_cb);
                        ;
                        var __tame_fn_5 = function (__tame_k) {
                            tame.setActiveCb (__tame_defer_cb);
                            var __tame_fn_6 = function (__tame_k) {
                                tame.setActiveCb (__tame_defer_cb);
                                var __tame_defers = new tame.Deferrals (__tame_k);
                                var __tame_fn_7 = function (__tame_k) {
                                    tame.setActiveCb (__tame_defer_cb);
                                    setTimeout (
                                    __tame_defers.defer ( { 
                                        parent_cb : __tame_defer_cb,
                                        line : 23,
                                        file : "test/cases/25.tjs"
                                    } )
                                    , 2 * Math . random ( ) ) ;
                                    tame.callChain([__tame_k]);
                                    tame.setActiveCb (null);
                                };
                                __tame_fn_7(tame.end);
                                __tame_defers._fulfill();
                                tame.setActiveCb (null);
                            };
                            var __tame_fn_8 = function (__tame_k) {
                                tame.setActiveCb (__tame_defer_cb);
                                cb ( done ) ;
                                tame.callChain([__tame_k]);
                                tame.setActiveCb (null);
                            };
                            tame.callChain([__tame_fn_6, __tame_fn_8, __tame_k]);
                            tame.setActiveCb (null);
                        };
                        tame.callChain([__tame_fn_5, __tame_k]);
                        tame.setActiveCb (null);
                    };
                    tame.callChain([__tame_fn_2, __tame_fn_4, __tame_fn_9, __tame_k]);
                    tame.setActiveCb (null);
                };
                tame.callChain([__tame_fn_1, __tame_k]);
                tame.setActiveCb (null);
            };
            tame.callChain([__tame_fn_10, __tame_k]);
            tame.setActiveCb (null);
        }
        ;
    }
    ;
    
    var obj = null ;
    var n = 30 ;
    
    exports [ "test of 'this' inside of a tamed class" ] = {
    
    run :
    function  (cb) {
        var __tame_defer_cb = tame.findDeferCb ([cb]);
        tame.setActiveCb (__tame_defer_cb);
        var __tame_this = this;
        var __tame_fn_17 = function (__tame_k) {
            tame.setActiveCb (__tame_defer_cb);
            obj = new MyClass ( n ) ;
            var done = false ;
            var __tame_fn_11 = function (__tame_k) {
                tame.setActiveCb (__tame_defer_cb);
                var __tame_fn_12 = function (__tame_k) {
                    tame.setActiveCb (__tame_defer_cb);
                    var __tame_k_implicit = {};
                    var __tame_fn_13 = function (__tame_k) {
                        tame.setActiveCb (__tame_defer_cb);
                        if (!done) {
                            var __tame_fn_14 = function (__tame_k) {
                                tame.setActiveCb (__tame_defer_cb);
                                var __tame_defers = new tame.Deferrals (__tame_k);
                                var __tame_fn_15 = function (__tame_k) {
                                    tame.setActiveCb (__tame_defer_cb);
                                    obj . next (
                                    __tame_defers.defer ( { 
                                        assign_fn : 
                                            function () {
                                                done = arguments[0];
                                            }
                                            ,
                                        parent_cb : __tame_defer_cb,
                                        line : 37,
                                        file : "test/cases/25.tjs"
                                    } )
                                    ) ;
                                    tame.callChain([__tame_k]);
                                    tame.setActiveCb (null);
                                };
                                __tame_fn_15(tame.end);
                                __tame_defers._fulfill();
                                tame.setActiveCb (null);
                            };
                            tame.callChain([__tame_fn_14, __tame_fn_13, __tame_k]);
                        } else {
                            tame.callChain([__tame_k]);
                        }
                        tame.setActiveCb (null);
                    };
                    __tame_k_implicit.k_break = __tame_k;
                    __tame_k_implicit.k_continue = function() { __tame_fn_13(__tame_k); };
                    tame.callChain([__tame_fn_13, __tame_k]);
                    tame.setActiveCb (null);
                };
                var __tame_fn_16 = function (__tame_k) {
                    tame.setActiveCb (__tame_defer_cb);
                    cb ( ) ;
                    tame.callChain([__tame_k]);
                    tame.setActiveCb (null);
                };
                tame.callChain([__tame_fn_12, __tame_fn_16, __tame_k]);
                tame.setActiveCb (null);
            };
            tame.callChain([__tame_fn_11, __tame_k]);
            tame.setActiveCb (null);
        };
        tame.callChain([__tame_fn_17, __tame_k]);
        tame.setActiveCb (null);
    }
    ,
    
    check :
    function  () {
        assert . equal ( obj . iter ( ) , n , "achieved n iterations" ) ;
    }
    } ;
    tame.callChain([__tame_k]);
    tame.setActiveCb (null);
};
__tame_fn_0 (tame.end);