// -*- mode: javascript; tab-width: 4; c-basic-offset: 4; indent-tabs-mode: nil; -*-

"use strict";

var slots = {};
var n = 10;
var assert = require ("assert");

var slots = [], x = {}, jams = []; 

var hard = { foo : { bar: [ { baz : [] } ] } };

function helper (i, cb) {
    await setTimeout (defer (), i);
    cb (i, 7*i, 2*i, 3*i);
}

exports["test capture of defer slots"] = {

    
    run : function (cb) {
        
	    for (var i = 0; i < n; i++) {
	        x[i] = i;
	    }
	    var dummy = { puppy : 0 };
	    await {
	        for (var i = 0; i < n; i++) {
		        helper (i, defer (slots[x[i]], dummy.puppy, jams[i], 
                                  hard.foo["bar"][0].baz[i]));
	        }
	    }
	    cb();
    },
    
    check : function () {
	    for (var i = 0; i < n; i++) {
	        assert.equal (slots[i] + jams[i] + hard.foo.bar[0].baz[i], 
                          6 *i, "slot[" + i + "] is " + 6 *i);
	    }
    }
};
