var tame = require('tamejs').runtime;
var __tame_defer_cb = null;
var __tame_fn_0 = function (__tame_k) {
    tame.setActiveCb (__tame_defer_cb);
    "use strict" ;
    
    var assert = require ( "assert" ) ;
    
    var check = false ;
    function f2 (x) {
        var __tame_defer_cb = tame.findDeferCb ([x]);
        tame.setActiveCb (__tame_defer_cb);
        var __tame_this = this;
        var __tame_fn_1 = function (__tame_k) {
            tame.setActiveCb (__tame_defer_cb);
            var __tame_fn_2 = function (__tame_k) {
                tame.setActiveCb (__tame_defer_cb);
                var __tame_defers = new tame.Deferrals (__tame_k);
                var __tame_fn_3 = function (__tame_k) {
                    tame.setActiveCb (__tame_defer_cb);
                    setTimeout (
                    __tame_defers.defer ( { 
                        func_name : "f2",
                        parent_cb : __tame_defer_cb,
                        line : 10,
                        file : "test/cases/31.tjs"
                    } )
                    , 10 ) ;
                    tame.callChain([__tame_k]);
                    tame.setActiveCb (null);
                };
                __tame_fn_3(tame.end);
                __tame_defers._fulfill();
                tame.setActiveCb (null);
            };
            var __tame_fn_8 = function (__tame_k) {
                tame.setActiveCb (__tame_defer_cb);
                var stk = tame . stackWalk ( ) ;
                var __tame_fn_4 = function (__tame_k) {
                    tame.setActiveCb (__tame_defer_cb);
                    var __tame_fn_5 = function (__tame_k) {
                        tame.setActiveCb (__tame_defer_cb);
                        var __tame_fn_6 = function (__tame_k) {
                            tame.setActiveCb (__tame_defer_cb);
                            check = true ;
                            tame.callChain([__tame_k]);
                            tame.setActiveCb (null);
                        };
                        if (stk . length > 2 && stk [ 0 ] . search ( new RegExp ( "at f1 \\(test/cases/31.tjs:\\d+\\)" ) ) && stk [ 1 ] . search ( new RegExp ( "at foo \\(test/cases/31.tjs:\\d+\\)" ) )) {
                            tame.callChain([__tame_fn_6, __tame_k]);
                        } else {
                            tame.callChain([__tame_k]);
                        }
                        tame.setActiveCb (null);
                    };
                    var __tame_fn_7 = function (__tame_k) {
                        tame.setActiveCb (__tame_defer_cb);
                        x ( ) ;
                        tame.callChain([__tame_k]);
                        tame.setActiveCb (null);
                    };
                    tame.callChain([__tame_fn_5, __tame_fn_7, __tame_k]);
                    tame.setActiveCb (null);
                };
                tame.callChain([__tame_fn_4, __tame_k]);
                tame.setActiveCb (null);
            };
            tame.callChain([__tame_fn_2, __tame_fn_8, __tame_k]);
            tame.setActiveCb (null);
        };
        tame.callChain([__tame_fn_1, __tame_k]);
        tame.setActiveCb (null);
    }
    ;
    function f1 (y) {
        var __tame_defer_cb = tame.findDeferCb ([y]);
        tame.setActiveCb (__tame_defer_cb);
        var __tame_this = this;
        var __tame_fn_9 = function (__tame_k) {
            tame.setActiveCb (__tame_defer_cb);
            var __tame_fn_10 = function (__tame_k) {
                tame.setActiveCb (__tame_defer_cb);
                var __tame_defers = new tame.Deferrals (__tame_k);
                var __tame_fn_11 = function (__tame_k) {
                    tame.setActiveCb (__tame_defer_cb);
                    f2 (
                    __tame_defers.defer ( { 
                        func_name : "f1",
                        parent_cb : __tame_defer_cb,
                        line : 21,
                        file : "test/cases/31.tjs"
                    } )
                    ) ;
                    tame.callChain([__tame_k]);
                    tame.setActiveCb (null);
                };
                __tame_fn_11(tame.end);
                __tame_defers._fulfill();
                tame.setActiveCb (null);
            };
            var __tame_fn_12 = function (__tame_k) {
                tame.setActiveCb (__tame_defer_cb);
                y ( ) ;
                tame.callChain([__tame_k]);
                tame.setActiveCb (null);
            };
            tame.callChain([__tame_fn_10, __tame_fn_12, __tame_k]);
            tame.setActiveCb (null);
        };
        tame.callChain([__tame_fn_9, __tame_k]);
        tame.setActiveCb (null);
    }
    ;
    function foo (z) {
        var __tame_defer_cb = tame.findDeferCb ([z]);
        tame.setActiveCb (__tame_defer_cb);
        var __tame_this = this;
        var __tame_fn_13 = function (__tame_k) {
            tame.setActiveCb (__tame_defer_cb);
            var __tame_fn_14 = function (__tame_k) {
                tame.setActiveCb (__tame_defer_cb);
                var __tame_defers = new tame.Deferrals (__tame_k);
                var __tame_fn_15 = function (__tame_k) {
                    tame.setActiveCb (__tame_defer_cb);
                    f1 (
                    __tame_defers.defer ( { 
                        func_name : "foo",
                        parent_cb : __tame_defer_cb,
                        line : 26,
                        file : "test/cases/31.tjs"
                    } )
                    ) ;
                    tame.callChain([__tame_k]);
                    tame.setActiveCb (null);
                };
                __tame_fn_15(tame.end);
                __tame_defers._fulfill();
                tame.setActiveCb (null);
            };
            var __tame_fn_16 = function (__tame_k) {
                tame.setActiveCb (__tame_defer_cb);
                z ( ) ;
                tame.callChain([__tame_k]);
                tame.setActiveCb (null);
            };
            tame.callChain([__tame_fn_14, __tame_fn_16, __tame_k]);
            tame.setActiveCb (null);
        };
        tame.callChain([__tame_fn_13, __tame_k]);
        tame.setActiveCb (null);
    }
    ;
    
    exports [ "tame stack dump" ] = {
    
    run :
    function  (cb) {
        var __tame_defer_cb = tame.findDeferCb ([cb]);
        tame.setActiveCb (__tame_defer_cb);
        var __tame_this = this;
        var __tame_fn_17 = function (__tame_k) {
            tame.setActiveCb (__tame_defer_cb);
            var __tame_fn_18 = function (__tame_k) {
                tame.setActiveCb (__tame_defer_cb);
                var __tame_defers = new tame.Deferrals (__tame_k);
                var __tame_fn_19 = function (__tame_k) {
                    tame.setActiveCb (__tame_defer_cb);
                    foo (
                    __tame_defers.defer ( { 
                        parent_cb : __tame_defer_cb,
                        line : 33,
                        file : "test/cases/31.tjs"
                    } )
                    ) ;
                    tame.callChain([__tame_k]);
                    tame.setActiveCb (null);
                };
                __tame_fn_19(tame.end);
                __tame_defers._fulfill();
                tame.setActiveCb (null);
            };
            var __tame_fn_20 = function (__tame_k) {
                tame.setActiveCb (__tame_defer_cb);
                cb ( ) ;
                tame.callChain([__tame_k]);
                tame.setActiveCb (null);
            };
            tame.callChain([__tame_fn_18, __tame_fn_20, __tame_k]);
            tame.setActiveCb (null);
        };
        tame.callChain([__tame_fn_17, __tame_k]);
        tame.setActiveCb (null);
    }
    ,
    check :
    function  () {
        assert . ok ( check , "stack was correct" ) ;
    }
    } ;
    tame.callChain([__tame_k]);
    tame.setActiveCb (null);
};
__tame_fn_0 (tame.end);