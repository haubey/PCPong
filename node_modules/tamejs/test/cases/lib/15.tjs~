// -*- mode: javascript; tab-width: 4; c-basic-offset: 4; indent-tabs-mode: nil; -*-
var assert = require ("assert");

var slots = {};

exports["rendezvous & windowing example"] = {


    run : function (ev) {
	
	function call (i, ev) {
	    slots[i] = 1;
	    twait { setTimeout (mkevent (), 10*Math.random()); }
	    slots[i] |= 2;
	    ev();
	};

    
	
	function window (n, window, ev) {
	    var rv = new tame.Rendezvous ();
	    var nsent = 0;
	    var nrecv = 0;
	    
	    while (nrecv < n) {
		    if (nsent - nrecv < window && nsent < n) {
		        call (nsent, rv.mkev (nsent));
		        nsent++;
		    } else {
		        var res = [];
		        twait { rv.wait (mkevent (res)); }
		        slots[res[0]] |= 4;
		        nrecv++;
		    }
	    }
	    ev();
	};
	    
	    var n = 100;
	    twait { window (n, 10, mkevent ()); }
	    ev ();
    },
	
    check : function () {
	    for (var i in slots) {
	        assert.equal (slots[i], 7, "all 3 events make bitwise 7");
	    }
    }
};
