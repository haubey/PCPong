var tame = require('tamejs').runtime;
var __tame_defer_cb = null;
var __tame_fn_0 = function (__tame_k) {
    tame.setActiveCb (__tame_defer_cb);
    "use strict" ;
    
    var slots = { } ;
    var n = 10 ;
    var assert = require ( "assert" ) ;
    require ( 'tamejs' ) . register ( ) ;
    var connectors = require ( '../../lib/connectors.tjs' )
    
    var results = [ ] ;
    var animals = [ ] ;
    function slowGuy (tm, str, cb) {
        var __tame_defer_cb = tame.findDeferCb ([tm, str, cb]);
        tame.setActiveCb (__tame_defer_cb);
        var __tame_this = this;
        var __tame_fn_1 = function (__tame_k) {
            tame.setActiveCb (__tame_defer_cb);
            var __tame_fn_2 = function (__tame_k) {
                tame.setActiveCb (__tame_defer_cb);
                var __tame_defers = new tame.Deferrals (__tame_k);
                var __tame_fn_3 = function (__tame_k) {
                    tame.setActiveCb (__tame_defer_cb);
                    setTimeout (
                    __tame_defers.defer ( { 
                        func_name : "slowGuy",
                        parent_cb : __tame_defer_cb,
                        line : 15,
                        file : "test/cases/22.tjs"
                    } )
                    , tm ) ;
                    tame.callChain([__tame_k]);
                    tame.setActiveCb (null);
                };
                __tame_fn_3(tame.end);
                __tame_defers._fulfill();
                tame.setActiveCb (null);
            };
            var __tame_fn_4 = function (__tame_k) {
                tame.setActiveCb (__tame_defer_cb);
                cb ( str ) ;
                tame.callChain([__tame_k]);
                tame.setActiveCb (null);
            };
            tame.callChain([__tame_fn_2, __tame_fn_4, __tame_k]);
            tame.setActiveCb (null);
        };
        tame.callChain([__tame_fn_1, __tame_k]);
        tame.setActiveCb (null);
    }
    ;
    
    exports [ "test timeout connectors" ] = {
    
    run :
    function  (cb) {
        var __tame_defer_cb = tame.findDeferCb ([cb]);
        tame.setActiveCb (__tame_defer_cb);
        var __tame_this = this;
        var __tame_fn_13 = function (__tame_k) {
            tame.setActiveCb (__tame_defer_cb);
            var info = [ ] ;
            var __tame_fn_5 = function (__tame_k) {
                tame.setActiveCb (__tame_defer_cb);
                var __tame_fn_6 = function (__tame_k) {
                    tame.setActiveCb (__tame_defer_cb);
                    var __tame_defers = new tame.Deferrals (__tame_k);
                    var __tame_fn_7 = function (__tame_k) {
                        tame.setActiveCb (__tame_defer_cb);
                        slowGuy ( 1 , "dog" ,
                        connectors . timeout (
                        __tame_defers.defer ( { 
                            assign_fn : 
                                (function (__tame_slot_0, __tame_slot_1) {
                                    return function () { 
                                        __tame_slot_0[__tame_slot_1] = arguments[0];
                                    }
                                    ;
                                }) (animals, 0),
                            parent_cb : __tame_defer_cb,
                            line : 26,
                            file : "test/cases/22.tjs"
                        } )
                        , 100 , info ) ) ;
                        tame.callChain([__tame_k]);
                        tame.setActiveCb (null);
                    };
                    __tame_fn_7(tame.end);
                    __tame_defers._fulfill();
                    tame.setActiveCb (null);
                };
                var __tame_fn_12 = function (__tame_k) {
                    tame.setActiveCb (__tame_defer_cb);
                    results [ 0 ] = info [ 0 ] ;
                    var __tame_fn_8 = function (__tame_k) {
                        tame.setActiveCb (__tame_defer_cb);
                        var __tame_fn_9 = function (__tame_k) {
                            tame.setActiveCb (__tame_defer_cb);
                            var __tame_defers = new tame.Deferrals (__tame_k);
                            var __tame_fn_10 = function (__tame_k) {
                                tame.setActiveCb (__tame_defer_cb);
                                slowGuy ( 100 , "cat" ,
                                connectors . timeout (
                                __tame_defers.defer ( { 
                                    assign_fn : 
                                        (function (__tame_slot_0, __tame_slot_1) {
                                            return function () { 
                                                __tame_slot_0[__tame_slot_1] = arguments[0];
                                            }
                                            ;
                                        }) (animals, 1),
                                    parent_cb : __tame_defer_cb,
                                    line : 32,
                                    file : "test/cases/22.tjs"
                                } )
                                , 1 , info ) ) ;
                                tame.callChain([__tame_k]);
                                tame.setActiveCb (null);
                            };
                            __tame_fn_10(tame.end);
                            __tame_defers._fulfill();
                            tame.setActiveCb (null);
                        };
                        var __tame_fn_11 = function (__tame_k) {
                            tame.setActiveCb (__tame_defer_cb);
                            results [ 1 ] = !info [ 1 ] ;
                            cb ( ) ;
                            tame.callChain([__tame_k]);
                            tame.setActiveCb (null);
                        };
                        tame.callChain([__tame_fn_9, __tame_fn_11, __tame_k]);
                        tame.setActiveCb (null);
                    };
                    tame.callChain([__tame_fn_8, __tame_k]);
                    tame.setActiveCb (null);
                };
                tame.callChain([__tame_fn_6, __tame_fn_12, __tame_k]);
                tame.setActiveCb (null);
            };
            tame.callChain([__tame_fn_5, __tame_k]);
            tame.setActiveCb (null);
        };
        tame.callChain([__tame_fn_13, __tame_k]);
        tame.setActiveCb (null);
    }
    ,
    
    check :
    function  () {
        assert . ok ( results [ 0 ] , "first case didn't timeout" ) ;
        assert . ok ( results [ 1 ] , "first case did timeout" ) ;
        assert . ok ( animals [ 0 ] == "dog" , "first case is a dog" ) ;
        assert . ok ( !animals [ 1 ] , "second case is a un-assigned" ) ;
    }
    } ;
    tame.callChain([__tame_k]);
    tame.setActiveCb (null);
};
__tame_fn_0 (tame.end);