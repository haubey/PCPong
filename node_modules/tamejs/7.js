var tame = require('tamejs').runtime;
var __tame_fn_0 = function (__tame_k) {
    function foo (cb) {
        var __tame_this = this;
        var __tame_fn_1 = function (__tame_k) {
            var __tame_fn_2 = function (__tame_k) {
                var __tame_defers = new tame.Defers (__tame_k);
                var __tame_fn_3 = function (__tame_k) {
                    setTimeout (
                    __tame_defers.defer ()
                    , 10 ) ;
                    tame.callChain([__tame_k]);
                };
                __tame_fn_3(tame.end);
                __tame_defers._fulfill();
            };
            var __tame_fn_4 = function (__tame_k) {
                cb ( 1 ) ;
                tame.callChain([__tame_k]);
            };
            tame.callChain([__tame_fn_2, __tame_fn_4, __tame_k]);
        };
        tame.callChain([__tame_fn_1, __tame_k]);
    }
    function boo () {
        var __tame_this = this;
        var __tame_fn_5 = function (__tame_k) {
            var i;
            var __tame_fn_6 = function (__tame_k) {
                var __tame_defers = new tame.Defers (__tame_k);
                var __tame_fn_7 = function (__tame_k) {
                    foo (
                    __tame_defers.defer ( { 
                        assign_fn : 
                        function () {
                            i = arguments[0];
                        }
                    } )
                    ) ;
                    tame.callChain([__tame_k]);
                };
                __tame_fn_7(tame.end);
                __tame_defers._fulfill();
            };
            var __tame_fn_8 = function (__tame_k) {
                console . log ( i ) ;
                tame.callChain([__tame_k]);
            };
            tame.callChain([__tame_fn_6, __tame_fn_8, __tame_k]);
        };
        tame.callChain([__tame_fn_5, __tame_k]);
    }
    boo ( ) ;
    tame.callChain([__tame_k]);
};
__tame_fn_0 (tame.end);