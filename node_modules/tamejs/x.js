var tame = require('tamejs').runtime;
var __tame_defer_cb = null;
var __tame_fn_13 = function (__tame_k) {
    tame.setActiveCb (__tame_defer_cb);
    require ( 'tamejs' ) . register ( )
    var fs = require ( "fs" ) ;
    function loaddir (path, callback) {
        fs . readdir ( path ,
        function  (err, filenames) {
            if (err) {
                callback ( err ) ;
                return ;
            } else {
            }
            var realfiles = [ ] ;
            var count = filenames . length ;
            filenames . forEach (
            function  (filename) {
                filename = path + "/" + filename ;
                fs . stat ( filename ,
                function  (err, stat) {
                    if (err) {
                        callback ( err ) ;
                        return ;
                    } else {
                    }
                    if (stat . isFile ( )) {
                        realfiles . push ( filename ) ;
                    } else {
                    }
                    count -- ;
                    if (count === 0) {
                        var results = [ ] ;
                        realfiles . forEach (
                        function  (filename) {
                            fs . readFile ( filename ,
                            function  (err, data) {
                                if (err) {
                                    callback ( err ) ;
                                    return ;
                                } else {
                                }
                                results . push ( data ) ;
                                if (results . length === realfiles . length) {
                                    callback ( null , results ) ;
                                } else {
                                }
                                ;
                            }
                            ) ;
                        }
                        ) ;
                    } else {
                    }
                }
                ) ;
            }
            ) ;
        }
        ) ;
    }
    function loaddir_tamed (path, callback) {
        var __tame_defer_cb = tame.findDeferCb ([path, callback]);
        tame.setActiveCb (__tame_defer_cb);
        var __tame_this = this;
        var __tame_fn_14 = function (__tame_k) {
            tame.setActiveCb (__tame_defer_cb);
            var err, filenames;
            var __tame_fn_15 = function (__tame_k) {
                tame.setActiveCb (__tame_defer_cb);
                var __tame_defers = new tame.Deferrals (__tame_k);
                var __tame_fn_16 = function (__tame_k) {
                    tame.setActiveCb (__tame_defer_cb);
                    fs . readdir ( path ,
                    __tame_defers.defer ( { 
                        assign_fn : 
                            function () {
                                err = arguments[0];
                                filenames = arguments[1];
                            }
                            ,
                        func_name : "loaddir_tamed",
                        parent_cb : __tame_defer_cb,
                        line : 41,
                        file : "meetup.js"
                    } )
                    ) ;
                    tame.callChain([__tame_k]);
                    tame.setActiveCb (null);
                };
                __tame_fn_16(tame.end);
                __tame_defers._fulfill();
                tame.setActiveCb (null);
            };
            var __tame_fn_32 = function (__tame_k) {
                tame.setActiveCb (__tame_defer_cb);
                var results = [ ] ;
                var stat , data ;
                var __tame_fn_17 = function (__tame_k) {
                    tame.setActiveCb (__tame_defer_cb);
                    var __tame_fn_18 = function (__tame_k) {
                        tame.setActiveCb (__tame_defer_cb);
                        var __tame_k_implicit = {};
                        var i = 0;
                        var __tame_fn_19 = function (__tame_k) {
                            tame.setActiveCb (__tame_defer_cb);
                            var __tame_fn_20 = function (__tame_k) {
                                tame.setActiveCb (__tame_defer_cb);
                                i ++
                                tame.callChain([__tame_fn_19, __tame_k]);
                                tame.setActiveCb (null);
                            };
                            __tame_k_implicit.k_break = __tame_k;
                            __tame_k_implicit.k_continue = function() { __tame_fn_20(__tame_k); };
                            if (!err && i < filenames . length) {
                                var __tame_fn_30 = function (__tame_k) {
                                    tame.setActiveCb (__tame_defer_cb);
                                    var f = path + "/" + filenames [ i ] ;
                                    var __tame_fn_21 = function (__tame_k) {
                                        tame.setActiveCb (__tame_defer_cb);
                                        var __tame_fn_22 = function (__tame_k) {
                                            tame.setActiveCb (__tame_defer_cb);
                                            var __tame_defers = new tame.Deferrals (__tame_k);
                                            var __tame_fn_23 = function (__tame_k) {
                                                tame.setActiveCb (__tame_defer_cb);
                                                fs . stat ( f ,
                                                __tame_defers.defer ( { 
                                                    assign_fn : 
                                                        function () {
                                                            err = arguments[0];
                                                            stat = arguments[1];
                                                        }
                                                        ,
                                                    func_name : "loaddir_tamed",
                                                    parent_cb : __tame_defer_cb,
                                                    line : 46,
                                                    file : "meetup.js"
                                                } )
                                                ) ;
                                                tame.callChain([__tame_k]);
                                                tame.setActiveCb (null);
                                            };
                                            __tame_fn_23(tame.end);
                                            __tame_defers._fulfill();
                                            tame.setActiveCb (null);
                                        };
                                        var __tame_fn_24 = function (__tame_k) {
                                            tame.setActiveCb (__tame_defer_cb);
                                            var __tame_fn_25 = function (__tame_k) {
                                                tame.setActiveCb (__tame_defer_cb);
                                                var __tame_fn_26 = function (__tame_k) {
                                                    tame.setActiveCb (__tame_defer_cb);
                                                    var __tame_defers = new tame.Deferrals (__tame_k);
                                                    var __tame_fn_27 = function (__tame_k) {
                                                        tame.setActiveCb (__tame_defer_cb);
                                                        fs . readFile ( f ,
                                                        __tame_defers.defer ( { 
                                                            assign_fn : 
                                                                function () {
                                                                    err = arguments[0];
                                                                    data = arguments[1];
                                                                }
                                                                ,
                                                            func_name : "loaddir_tamed",
                                                            parent_cb : __tame_defer_cb,
                                                            line : 48,
                                                            file : "meetup.js"
                                                        } )
                                                        ) ;
                                                        tame.callChain([__tame_k]);
                                                        tame.setActiveCb (null);
                                                    };
                                                    __tame_fn_27(tame.end);
                                                    __tame_defers._fulfill();
                                                    tame.setActiveCb (null);
                                                };
                                                var __tame_fn_28 = function (__tame_k) {
                                                    tame.setActiveCb (__tame_defer_cb);
                                                    var __tame_fn_29 = function (__tame_k) {
                                                        tame.setActiveCb (__tame_defer_cb);
                                                        results . push ( data ) ;
                                                        tame.callChain([__tame_k]);
                                                        tame.setActiveCb (null);
                                                    };
                                                    if (!err) {
                                                        tame.callChain([__tame_fn_29, __tame_k]);
                                                    } else {
                                                        tame.callChain([__tame_k]);
                                                    }
                                                    tame.setActiveCb (null);
                                                };
                                                tame.callChain([__tame_fn_26, __tame_fn_28, __tame_k]);
                                                tame.setActiveCb (null);
                                            };
                                            if (!err && stat . isFile ( )) {
                                                tame.callChain([__tame_fn_25, __tame_k]);
                                            } else {
                                                tame.callChain([__tame_k]);
                                            }
                                            tame.setActiveCb (null);
                                        };
                                        tame.callChain([__tame_fn_22, __tame_fn_24, __tame_k]);
                                        tame.setActiveCb (null);
                                    };
                                    tame.callChain([__tame_fn_21, __tame_k]);
                                    tame.setActiveCb (null);
                                };
                                tame.callChain([__tame_fn_30, __tame_fn_20, __tame_k]);
                            } else {
                                tame.callChain([__tame_k]);
                            }
                            tame.setActiveCb (null);
                        };
                        tame.callChain([__tame_fn_19, __tame_k]);
                        tame.setActiveCb (null);
                    };
                    var __tame_fn_31 = function (__tame_k) {
                        tame.setActiveCb (__tame_defer_cb);
                        callback ( err , results ) ;
                        tame.callChain([__tame_k]);
                        tame.setActiveCb (null);
                    };
                    tame.callChain([__tame_fn_18, __tame_fn_31, __tame_k]);
                    tame.setActiveCb (null);
                };
                tame.callChain([__tame_fn_17, __tame_k]);
                tame.setActiveCb (null);
            };
            tame.callChain([__tame_fn_15, __tame_fn_32, __tame_k]);
            tame.setActiveCb (null);
        };
        tame.callChain([__tame_fn_14, __tame_k]);
        tame.setActiveCb (null);
    }
    function loaddir_parallel (path, callback) {
        var __tame_defer_cb = tame.findDeferCb ([path, callback]);
        tame.setActiveCb (__tame_defer_cb);
        var __tame_this = this;
        var __tame_fn_33 = function (__tame_k) {
            tame.setActiveCb (__tame_defer_cb);
            var err, filenames;
            var __tame_fn_34 = function (__tame_k) {
                tame.setActiveCb (__tame_defer_cb);
                var __tame_defers = new tame.Deferrals (__tame_k);
                var __tame_fn_35 = function (__tame_k) {
                    tame.setActiveCb (__tame_defer_cb);
                    fs . readdir ( path ,
                    __tame_defers.defer ( { 
                        assign_fn : 
                            function () {
                                err = arguments[0];
                                filenames = arguments[1];
                            }
                            ,
                        func_name : "loaddir_parallel",
                        parent_cb : __tame_defer_cb,
                        line : 60,
                        file : "meetup.js"
                    } )
                    ) ;
                    tame.callChain([__tame_k]);
                    tame.setActiveCb (null);
                };
                __tame_fn_35(tame.end);
                __tame_defers._fulfill();
                tame.setActiveCb (null);
            };
            var __tame_fn_52 = function (__tame_k) {
                tame.setActiveCb (__tame_defer_cb);
                var results = [ ] ;
                var __tame_fn_36 = function (__tame_k) {
                    tame.setActiveCb (__tame_defer_cb);
                    var __tame_fn_37 = function (__tame_k) {
                        tame.setActiveCb (__tame_defer_cb);
                        var __tame_defers = new tame.Deferrals (__tame_k);
                        var __tame_fn_38 = function (__tame_k) {
                            tame.setActiveCb (__tame_defer_cb);
                             for (var i = 0 ; !err && i < filenames . length ; i ++) {
                                (
                                function  (autocb) {
                                    var __tame_defer_cb = tame.findDeferCb ([autocb]);
                                    tame.setActiveCb (__tame_defer_cb);
                                    var __tame_this = this;
                                    var __tame_fn_50 = function (__tame_k) {
                                        tame.setActiveCb (__tame_defer_cb);
                                        var f = path + "/" + filenames [ i ] ;
                                        var myerr , stat , data ;
                                        var __tame_fn_39 = function (__tame_k) {
                                            tame.setActiveCb (__tame_defer_cb);
                                            var __tame_fn_40 = function (__tame_k) {
                                                tame.setActiveCb (__tame_defer_cb);
                                                var __tame_defers = new tame.Deferrals (__tame_k);
                                                var __tame_fn_41 = function (__tame_k) {
                                                    tame.setActiveCb (__tame_defer_cb);
                                                    fs . stat ( f ,
                                                    __tame_defers.defer ( { 
                                                        assign_fn : 
                                                            function () {
                                                                myerr = arguments[0];
                                                                stat = arguments[1];
                                                            }
                                                            ,
                                                        parent_cb : __tame_defer_cb,
                                                        line : 67,
                                                        file : "meetup.js"
                                                    } )
                                                    ) ;
                                                    tame.callChain([__tame_k]);
                                                    tame.setActiveCb (null);
                                                };
                                                __tame_fn_41(tame.end);
                                                __tame_defers._fulfill();
                                                tame.setActiveCb (null);
                                            };
                                            var __tame_fn_42 = function (__tame_k) {
                                                tame.setActiveCb (__tame_defer_cb);
                                                var __tame_fn_43 = function (__tame_k) {
                                                    tame.setActiveCb (__tame_defer_cb);
                                                    var __tame_fn_44 = function (__tame_k) {
                                                        tame.setActiveCb (__tame_defer_cb);
                                                        var __tame_defers = new tame.Deferrals (__tame_k);
                                                        var __tame_fn_45 = function (__tame_k) {
                                                            tame.setActiveCb (__tame_defer_cb);
                                                            fs . readFile ( f ,
                                                            __tame_defers.defer ( { 
                                                                assign_fn : 
                                                                    function () {
                                                                        myerr = arguments[0];
                                                                        data = arguments[1];
                                                                    }
                                                                    ,
                                                                parent_cb : __tame_defer_cb,
                                                                line : 69,
                                                                file : "meetup.js"
                                                            } )
                                                            ) ;
                                                            tame.callChain([__tame_k]);
                                                            tame.setActiveCb (null);
                                                        };
                                                        __tame_fn_45(tame.end);
                                                        __tame_defers._fulfill();
                                                        tame.setActiveCb (null);
                                                    };
                                                    var __tame_fn_46 = function (__tame_k) {
                                                        tame.setActiveCb (__tame_defer_cb);
                                                        var __tame_fn_47 = function (__tame_k) {
                                                            tame.setActiveCb (__tame_defer_cb);
                                                            results . push ( data ) ;
                                                            tame.callChain([__tame_k]);
                                                            tame.setActiveCb (null);
                                                        };
                                                        if (!myerr) {
                                                            tame.callChain([__tame_fn_47, __tame_k]);
                                                        } else {
                                                            tame.callChain([__tame_k]);
                                                        }
                                                        tame.setActiveCb (null);
                                                    };
                                                    tame.callChain([__tame_fn_44, __tame_fn_46, __tame_k]);
                                                    tame.setActiveCb (null);
                                                };
                                                if (!myerr && stat . isFile ( )) {
                                                    tame.callChain([__tame_fn_43, __tame_k]);
                                                } else {
                                                    tame.callChain([__tame_k]);
                                                }
                                                tame.setActiveCb (null);
                                            };
                                            var __tame_fn_48 = function (__tame_k) {
                                                tame.setActiveCb (__tame_defer_cb);
                                                var __tame_fn_49 = function (__tame_k) {
                                                    tame.setActiveCb (__tame_defer_cb);
                                                    err = myerr ;
                                                    tame.callChain([__tame_k]);
                                                    tame.setActiveCb (null);
                                                };
                                                if (myerr) {
                                                    tame.callChain([__tame_fn_49, __tame_k]);
                                                } else {
                                                    tame.callChain([__tame_k]);
                                                }
                                                tame.setActiveCb (null);
                                            };
                                            tame.callChain([__tame_fn_40, __tame_fn_42, __tame_fn_48, __tame_k]);
                                            tame.setActiveCb (null);
                                        };
                                        tame.callChain([__tame_fn_39, __tame_k]);
                                        tame.setActiveCb (null);
                                    };
                                    tame.callChain([__tame_fn_50, autocb, __tame_k]);
                                    tame.setActiveCb (null);
                                }
                                ) (
                                __tame_defers.defer ( { 
                                    parent_cb : __tame_defer_cb,
                                    line : 73,
                                    file : "meetup.js"
                                } )
                                ) ;
                            }
                            tame.callChain([__tame_k]);
                            tame.setActiveCb (null);
                        };
                        __tame_fn_38(tame.end);
                        __tame_defers._fulfill();
                        tame.setActiveCb (null);
                    };
                    var __tame_fn_51 = function (__tame_k) {
                        tame.setActiveCb (__tame_defer_cb);
                        callback ( err , results ) ;
                        tame.callChain([__tame_k]);
                        tame.setActiveCb (null);
                    };
                    tame.callChain([__tame_fn_37, __tame_fn_51, __tame_k]);
                    tame.setActiveCb (null);
                };
                tame.callChain([__tame_fn_36, __tame_k]);
                tame.setActiveCb (null);
            };
            tame.callChain([__tame_fn_34, __tame_fn_52, __tame_k]);
            tame.setActiveCb (null);
        };
        tame.callChain([__tame_fn_33, __tame_k]);
        tame.setActiveCb (null);
    }
    var Pipeliner = require ( "tamejs/lib/connectors.tjs" ) . Pipeliner ;
    function loaddir_windowed (path, callback, window) {
        var __tame_defer_cb = tame.findDeferCb ([path, callback, window]);
        tame.setActiveCb (__tame_defer_cb);
        var __tame_this = this;
        var __tame_fn_53 = function (__tame_k) {
            tame.setActiveCb (__tame_defer_cb);
            var __tame_fn_54 = function (__tame_k) {
                tame.setActiveCb (__tame_defer_cb);
                var __tame_fn_55 = function (__tame_k) {
                    tame.setActiveCb (__tame_defer_cb);
                    window = 10 ;
                    tame.callChain([__tame_k]);
                    tame.setActiveCb (null);
                };
                if (!window) {
                    tame.callChain([__tame_fn_55, __tame_k]);
                } else {
                    tame.callChain([__tame_k]);
                }
                tame.setActiveCb (null);
            };
            var __tame_fn_83 = function (__tame_k) {
                tame.setActiveCb (__tame_defer_cb);
                var pipeline = new Pipeliner ( window ) ;
                var __tame_fn_56 = function (__tame_k) {
                    tame.setActiveCb (__tame_defer_cb);
                    var err, filenames;
                    var __tame_fn_57 = function (__tame_k) {
                        tame.setActiveCb (__tame_defer_cb);
                        var __tame_defers = new tame.Deferrals (__tame_k);
                        var __tame_fn_58 = function (__tame_k) {
                            tame.setActiveCb (__tame_defer_cb);
                            fs . readdir ( path ,
                            __tame_defers.defer ( { 
                                assign_fn : 
                                    function () {
                                        err = arguments[0];
                                        filenames = arguments[1];
                                    }
                                    ,
                                func_name : "loaddir_windowed",
                                parent_cb : __tame_defer_cb,
                                line : 87,
                                file : "meetup.js"
                            } )
                            ) ;
                            tame.callChain([__tame_k]);
                            tame.setActiveCb (null);
                        };
                        __tame_fn_58(tame.end);
                        __tame_defers._fulfill();
                        tame.setActiveCb (null);
                    };
                    var __tame_fn_82 = function (__tame_k) {
                        tame.setActiveCb (__tame_defer_cb);
                        var results = [ ] ;
                        var __tame_fn_59 = function (__tame_k) {
                            tame.setActiveCb (__tame_defer_cb);
                            var __tame_fn_60 = function (__tame_k) {
                                tame.setActiveCb (__tame_defer_cb);
                                var __tame_k_implicit = {};
                                var i = 0;
                                var __tame_fn_61 = function (__tame_k) {
                                    tame.setActiveCb (__tame_defer_cb);
                                    var __tame_fn_62 = function (__tame_k) {
                                        tame.setActiveCb (__tame_defer_cb);
                                        i ++
                                        tame.callChain([__tame_fn_61, __tame_k]);
                                        tame.setActiveCb (null);
                                    };
                                    __tame_k_implicit.k_break = __tame_k;
                                    __tame_k_implicit.k_continue = function() { __tame_fn_62(__tame_k); };
                                    if (!err && i < filenames . length) {
                                        var __tame_fn_63 = function (__tame_k) {
                                            tame.setActiveCb (__tame_defer_cb);
                                            var __tame_fn_64 = function (__tame_k) {
                                                tame.setActiveCb (__tame_defer_cb);
                                                var __tame_defers = new tame.Deferrals (__tame_k);
                                                var __tame_fn_65 = function (__tame_k) {
                                                    tame.setActiveCb (__tame_defer_cb);
                                                    pipeline . waitInQueue (
                                                    __tame_defers.defer ( { 
                                                        func_name : "loaddir_windowed",
                                                        parent_cb : __tame_defer_cb,
                                                        line : 91,
                                                        file : "meetup.js"
                                                    } )
                                                    ) ;
                                                    tame.callChain([__tame_k]);
                                                    tame.setActiveCb (null);
                                                };
                                                __tame_fn_65(tame.end);
                                                __tame_defers._fulfill();
                                                tame.setActiveCb (null);
                                            };
                                            var __tame_fn_66 = function (__tame_k) {
                                                tame.setActiveCb (__tame_defer_cb);
                                                (
                                                function  (autocb) {
                                                    var __tame_defer_cb = tame.findDeferCb ([autocb]);
                                                    tame.setActiveCb (__tame_defer_cb);
                                                    var __tame_this = this;
                                                    var __tame_fn_78 = function (__tame_k) {
                                                        tame.setActiveCb (__tame_defer_cb);
                                                        var f = path + "/" + filenames [ i ] ;
                                                        var myerr , stat , data ;
                                                        var __tame_fn_67 = function (__tame_k) {
                                                            tame.setActiveCb (__tame_defer_cb);
                                                            var __tame_fn_68 = function (__tame_k) {
                                                                tame.setActiveCb (__tame_defer_cb);
                                                                var __tame_defers = new tame.Deferrals (__tame_k);
                                                                var __tame_fn_69 = function (__tame_k) {
                                                                    tame.setActiveCb (__tame_defer_cb);
                                                                    fs . stat ( f ,
                                                                    __tame_defers.defer ( { 
                                                                        assign_fn : 
                                                                            function () {
                                                                                myerr = arguments[0];
                                                                                stat = arguments[1];
                                                                            }
                                                                            ,
                                                                        parent_cb : __tame_defer_cb,
                                                                        line : 95,
                                                                        file : "meetup.js"
                                                                    } )
                                                                    ) ;
                                                                    tame.callChain([__tame_k]);
                                                                    tame.setActiveCb (null);
                                                                };
                                                                __tame_fn_69(tame.end);
                                                                __tame_defers._fulfill();
                                                                tame.setActiveCb (null);
                                                            };
                                                            var __tame_fn_70 = function (__tame_k) {
                                                                tame.setActiveCb (__tame_defer_cb);
                                                                var __tame_fn_71 = function (__tame_k) {
                                                                    tame.setActiveCb (__tame_defer_cb);
                                                                    var __tame_fn_72 = function (__tame_k) {
                                                                        tame.setActiveCb (__tame_defer_cb);
                                                                        var __tame_defers = new tame.Deferrals (__tame_k);
                                                                        var __tame_fn_73 = function (__tame_k) {
                                                                            tame.setActiveCb (__tame_defer_cb);
                                                                            fs . readFile ( f ,
                                                                            __tame_defers.defer ( { 
                                                                                assign_fn : 
                                                                                    function () {
                                                                                        myerr = arguments[0];
                                                                                        data = arguments[1];
                                                                                    }
                                                                                    ,
                                                                                parent_cb : __tame_defer_cb,
                                                                                line : 97,
                                                                                file : "meetup.js"
                                                                            } )
                                                                            ) ;
                                                                            tame.callChain([__tame_k]);
                                                                            tame.setActiveCb (null);
                                                                        };
                                                                        __tame_fn_73(tame.end);
                                                                        __tame_defers._fulfill();
                                                                        tame.setActiveCb (null);
                                                                    };
                                                                    var __tame_fn_74 = function (__tame_k) {
                                                                        tame.setActiveCb (__tame_defer_cb);
                                                                        var __tame_fn_75 = function (__tame_k) {
                                                                            tame.setActiveCb (__tame_defer_cb);
                                                                            results . push ( data ) ;
                                                                            tame.callChain([__tame_k]);
                                                                            tame.setActiveCb (null);
                                                                        };
                                                                        if (!myerr) {
                                                                            tame.callChain([__tame_fn_75, __tame_k]);
                                                                        } else {
                                                                            tame.callChain([__tame_k]);
                                                                        }
                                                                        tame.setActiveCb (null);
                                                                    };
                                                                    tame.callChain([__tame_fn_72, __tame_fn_74, __tame_k]);
                                                                    tame.setActiveCb (null);
                                                                };
                                                                if (!myerr && stat . isFile ( )) {
                                                                    tame.callChain([__tame_fn_71, __tame_k]);
                                                                } else {
                                                                    tame.callChain([__tame_k]);
                                                                }
                                                                tame.setActiveCb (null);
                                                            };
                                                            var __tame_fn_76 = function (__tame_k) {
                                                                tame.setActiveCb (__tame_defer_cb);
                                                                var __tame_fn_77 = function (__tame_k) {
                                                                    tame.setActiveCb (__tame_defer_cb);
                                                                    err = myerr ;
                                                                    tame.callChain([__tame_k]);
                                                                    tame.setActiveCb (null);
                                                                };
                                                                if (myerr) {
                                                                    tame.callChain([__tame_fn_77, __tame_k]);
                                                                } else {
                                                                    tame.callChain([__tame_k]);
                                                                }
                                                                tame.setActiveCb (null);
                                                            };
                                                            tame.callChain([__tame_fn_68, __tame_fn_70, __tame_fn_76, __tame_k]);
                                                            tame.setActiveCb (null);
                                                        };
                                                        tame.callChain([__tame_fn_67, __tame_k]);
                                                        tame.setActiveCb (null);
                                                    };
                                                    tame.callChain([__tame_fn_78, autocb, __tame_k]);
                                                    tame.setActiveCb (null);
                                                }
                                                ) ( pipeline .
                                                __tame_defers.defer ( { 
                                                    parent_cb : __tame_defer_cb,
                                                    line : 101,
                                                    file : "meetup.js"
                                                } )
                                                ) ;
                                                tame.callChain([__tame_k]);
                                                tame.setActiveCb (null);
                                            };
                                            tame.callChain([__tame_fn_64, __tame_fn_66, __tame_k]);
                                            tame.setActiveCb (null);
                                        };
                                        tame.callChain([__tame_fn_63, __tame_fn_62, __tame_k]);
                                    } else {
                                        tame.callChain([__tame_k]);
                                    }
                                    tame.setActiveCb (null);
                                };
                                tame.callChain([__tame_fn_61, __tame_k]);
                                tame.setActiveCb (null);
                            };
                            var __tame_fn_79 = function (__tame_k) {
                                tame.setActiveCb (__tame_defer_cb);
                                var __tame_defers = new tame.Deferrals (__tame_k);
                                var __tame_fn_80 = function (__tame_k) {
                                    tame.setActiveCb (__tame_defer_cb);
                                    pipeline . flush (
                                    __tame_defers.defer ( { 
                                        parent_cb : __tame_defer_cb,
                                        line : 103,
                                        file : "meetup.js"
                                    } )
                                    ) ;
                                    tame.callChain([__tame_k]);
                                    tame.setActiveCb (null);
                                };
                                __tame_fn_80(tame.end);
                                __tame_defers._fulfill();
                                tame.setActiveCb (null);
                            };
                            var __tame_fn_81 = function (__tame_k) {
                                tame.setActiveCb (__tame_defer_cb);
                                callback ( err , results ) ;
                                tame.callChain([__tame_k]);
                                tame.setActiveCb (null);
                            };
                            tame.callChain([__tame_fn_60, __tame_fn_79, __tame_fn_81, __tame_k]);
                            tame.setActiveCb (null);
                        };
                        tame.callChain([__tame_fn_59, __tame_k]);
                        tame.setActiveCb (null);
                    };
                    tame.callChain([__tame_fn_57, __tame_fn_82, __tame_k]);
                    tame.setActiveCb (null);
                };
                tame.callChain([__tame_fn_56, __tame_k]);
                tame.setActiveCb (null);
            };
            tame.callChain([__tame_fn_54, __tame_fn_83, __tame_k]);
            tame.setActiveCb (null);
        };
        tame.callChain([__tame_fn_53, __tame_k]);
        tame.setActiveCb (null);
    }
    var dir = process . argv [ 2 ] ;
    var funcs = [ loaddir , loaddir_tamed , loaddir_parallel , loaddir_windowed ] ;
    
    console . log ( "D: " + dir ) ;
    var __tame_fn_0 = function (__tame_k) {
        tame.setActiveCb (__tame_defer_cb);
        var __tame_k_implicit = {};
        var __tame_for_in_array = [];
        for (var i in funcs) { __tame_for_in_array.push(i); }
        var __tame_for_in_iter = 0;
        var __tame_fn_1 = function (__tame_k) {
            tame.setActiveCb (__tame_defer_cb);
            var __tame_fn_2 = function (__tame_k) {
                tame.setActiveCb (__tame_defer_cb);
                __tame_for_in_iter++
                tame.callChain([__tame_fn_1, __tame_k]);
                tame.setActiveCb (null);
            };
            __tame_k_implicit.k_break = __tame_k;
            __tame_k_implicit.k_continue = function() { __tame_fn_2(__tame_k); };
            if (__tame_for_in_iter < __tame_for_in_array.length) {
                var __tame_fn_12 = function (__tame_k) {
                    tame.setActiveCb (__tame_defer_cb);
                    var i = __tame_for_in_array[__tame_for_in_iter];
                    var f = funcs [ i ] ;
                    console . log ( f . toString ( ) . split ( "\n" ) [ 0 ] ) ;
                    console . log ( "==========================" ) ;
                    var __tame_fn_3 = function (__tame_k) {
                        tame.setActiveCb (__tame_defer_cb);
                        var err, res;
                        var __tame_fn_4 = function (__tame_k) {
                            tame.setActiveCb (__tame_defer_cb);
                            var __tame_defers = new tame.Deferrals (__tame_k);
                            var __tame_fn_5 = function (__tame_k) {
                                tame.setActiveCb (__tame_defer_cb);
                                f ( dir ,
                                __tame_defers.defer ( { 
                                    assign_fn : 
                                        function () {
                                            err = arguments[0];
                                            res = arguments[1];
                                        }
                                        ,
                                    parent_cb : __tame_defer_cb,
                                    line : 117,
                                    file : "meetup.js"
                                } )
                                ) ;
                                tame.callChain([__tame_k]);
                                tame.setActiveCb (null);
                            };
                            __tame_fn_5(tame.end);
                            __tame_defers._fulfill();
                            tame.setActiveCb (null);
                        };
                        var __tame_fn_6 = function (__tame_k) {
                            tame.setActiveCb (__tame_defer_cb);
                            var __tame_fn_7 = function (__tame_k) {
                                tame.setActiveCb (__tame_defer_cb);
                                console . log ( "err: " + err ) ;
                                tame.callChain([__tame_k]);
                                tame.setActiveCb (null);
                            };
                            var __tame_fn_11 = function (__tame_k) {
                                tame.setActiveCb (__tame_defer_cb);
                                var lens = [ ] ;
                                var __tame_fn_8 = function (__tame_k) {
                                    tame.setActiveCb (__tame_defer_cb);
                                    var __tame_fn_9 = function (__tame_k) {
                                        tame.setActiveCb (__tame_defer_cb);
                                         for (var r in res) {
                                            lens . push ( res [ r ] . length ) ;
                                        }
                                        tame.callChain([__tame_k]);
                                        tame.setActiveCb (null);
                                    };
                                    var __tame_fn_10 = function (__tame_k) {
                                        tame.setActiveCb (__tame_defer_cb);
                                        console . log ( lens . sort ( ) . join ( "," ) ) ;
                                        tame.callChain([__tame_k]);
                                        tame.setActiveCb (null);
                                    };
                                    tame.callChain([__tame_fn_9, __tame_fn_10, __tame_k]);
                                    tame.setActiveCb (null);
                                };
                                tame.callChain([__tame_fn_8, __tame_k]);
                                tame.setActiveCb (null);
                            };
                            if (err) {
                                tame.callChain([__tame_fn_7, __tame_k]);
                            } else {
                                tame.callChain([__tame_fn_11, __tame_k]);
                            }
                            tame.setActiveCb (null);
                        };
                        tame.callChain([__tame_fn_4, __tame_fn_6, __tame_k]);
                        tame.setActiveCb (null);
                    };
                    tame.callChain([__tame_fn_3, __tame_k]);
                    tame.setActiveCb (null);
                };
                tame.callChain([__tame_fn_12, __tame_fn_2, __tame_k]);
            } else {
                tame.callChain([__tame_k]);
            }
            tame.setActiveCb (null);
        };
        tame.callChain([__tame_fn_1, __tame_k]);
        tame.setActiveCb (null);
    };
    tame.callChain([__tame_fn_0, __tame_k]);
    tame.setActiveCb (null);
};
__tame_fn_13 (tame.end);